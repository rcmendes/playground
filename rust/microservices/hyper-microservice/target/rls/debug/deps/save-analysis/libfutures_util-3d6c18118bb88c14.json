{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4","program":"/Users/rodrigo/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--edition=2018","--crate-name","futures_util","/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=3d6c18118bb88c14","-C","extra-filename=-3d6c18118bb88c14","--out-dir","/Users/rodrigo/git-projects/github.com/playground/rust/microservices/hyper-microservice/target/rls/debug/deps","-L","dependency=/Users/rodrigo/git-projects/github.com/playground/rust/microservices/hyper-microservice/target/rls/debug/deps","--extern","futures_core=/Users/rodrigo/git-projects/github.com/playground/rust/microservices/hyper-microservice/target/rls/debug/deps/libfutures_core-b3be23cf3359343f.rmeta","--extern","futures_task=/Users/rodrigo/git-projects/github.com/playground/rust/microservices/hyper-microservice/target/rls/debug/deps/libfutures_task-2a7397c99249e2bd.rmeta","--extern","pin_utils=/Users/rodrigo/git-projects/github.com/playground/rust/microservices/hyper-microservice/target/rls/debug/deps/libpin_utils-c75c3feab2a4c121.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/rodrigo/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/rodrigo/git-projects/github.com/playground/rust/microservices/hyper-microservice/target/rls/debug/deps/libfutures_util-3d6c18118bb88c14.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[17517943965043600274,15423848187581518487]},"crate_root":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src","external_crates":[{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5459908120384850477,15760959269387734159]}},{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[11826469219384905814,12486183027959381912]}},{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[5497990426549684121,15109235050116755313]}},{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":4,"id":{"name":"futures_core","disambiguator":[7004260661281141444,9454913898690975587]}},{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[5808000563841838002,6875932327897409807]}},{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":6,"id":{"name":"alloc","disambiguator":[9495953968349266340,8510226981626586408]}},{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":7,"id":{"name":"libc","disambiguator":[423181384897816611,2293857470463835221]}},{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[5608331764705855408,15392280463108098182]}},{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[14701876030349379005,4369912422515260820]}},{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":10,"id":{"name":"backtrace","disambiguator":[8984243875435576741,4446548522921354]}},{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[4101421024496600006,15821692231896539213]}},{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":12,"id":{"name":"backtrace_sys","disambiguator":[3079379191059796654,13101802771042696873]}},{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":13,"id":{"name":"hashbrown","disambiguator":[7173097494859913114,11426318732171342333]}},{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":14,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12351377766094969309,8390201886823579403]}},{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[2739304812783641882,6504751215723634061]}},{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":16,"id":{"name":"pin_utils","disambiguator":[7789391841268433326,16431041231729826260]}},{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","num":17,"id":{"name":"futures_task","disambiguator":[28555743361353014,7094972870269953864]}}],"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":0,"byte_end":3844,"line_start":1,"line_end":122,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":131},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":1745,"byte_end":1750,"line_start":38,"line_end":38,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":7},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":1771,"byte_end":1778,"line_start":39,"line_end":39,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":168},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":2015,"byte_end":2028,"line_start":52,"line_end":52,"column_start":23,"column_end":36},"alias_span":null,"name":"core_reexport","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":17},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4164,"byte_end":4175,"line_start":9,"line_end":9,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":1,"index":7931},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4177,"byte_end":4183,"line_start":9,"line_end":9,"column_start":45,"column_end":51},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":4,"index":32},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4185,"byte_end":4194,"line_start":9,"line_end":9,"column_start":53,"column_end":62},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":17,"index":89},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4220,"byte_end":4229,"line_start":10,"line_end":10,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":17,"index":55},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4231,"byte_end":4245,"line_start":10,"line_end":10,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":17,"index":110},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4247,"byte_end":4262,"line_start":10,"line_end":10,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":40},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4378,"byte_end":4385,"line_start":17,"line_end":17,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":69},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4387,"byte_end":4400,"line_start":17,"line_end":17,"column_start":14,"column_end":27},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3315},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4402,"byte_end":4406,"line_start":17,"line_end":17,"column_start":29,"column_end":33},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":295},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4408,"byte_end":4417,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3360},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4419,"byte_end":4426,"line_start":17,"line_end":17,"column_start":46,"column_end":53},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3324},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4428,"byte_end":4438,"line_start":17,"line_end":17,"column_start":55,"column_end":65},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3333},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4440,"byte_end":4443,"line_start":17,"line_end":17,"column_start":67,"column_end":70},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3383},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4445,"byte_end":4455,"line_start":17,"line_end":17,"column_start":72,"column_end":82},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3347},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4457,"byte_end":4461,"line_start":17,"line_end":17,"column_start":84,"column_end":88},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3374},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4463,"byte_end":4472,"line_start":17,"line_end":17,"column_start":90,"column_end":99},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3410},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4740,"byte_end":4747,"line_start":32,"line_end":32,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3423},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4749,"byte_end":4756,"line_start":32,"line_end":32,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3449},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4758,"byte_end":4768,"line_start":32,"line_end":32,"column_start":23,"column_end":33},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3435},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4770,"byte_end":4779,"line_start":32,"line_end":32,"column_start":35,"column_end":44},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3463},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4781,"byte_end":4791,"line_start":32,"line_end":32,"column_start":46,"column_end":56},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3472},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4793,"byte_end":4799,"line_start":32,"line_end":32,"column_start":58,"column_end":64},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3486},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4801,"byte_end":4806,"line_start":32,"line_end":32,"column_start":66,"column_end":71},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3519},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4808,"byte_end":4814,"line_start":32,"line_end":32,"column_start":73,"column_end":79},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":618},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4816,"byte_end":4832,"line_start":32,"line_end":32,"column_start":81,"column_end":97},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":735},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4838,"byte_end":4850,"line_start":33,"line_end":33,"column_start":5,"column_end":17},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3535},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4852,"byte_end":4864,"line_start":33,"line_end":33,"column_start":19,"column_end":31},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":785},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4988,"byte_end":4992,"line_start":42,"line_end":42,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3585},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4994,"byte_end":4998,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":812},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5039,"byte_end":5046,"line_start":45,"line_end":45,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3591},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5048,"byte_end":5055,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":837},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5102,"byte_end":5112,"line_start":48,"line_end":48,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3597},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5114,"byte_end":5123,"line_start":48,"line_end":48,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3610},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5161,"byte_end":5173,"line_start":51,"line_end":51,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":887},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5213,"byte_end":5220,"line_start":54,"line_end":54,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":882},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5222,"byte_end":5228,"line_start":54,"line_end":54,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":926},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5265,"byte_end":5268,"line_start":57,"line_end":57,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":923},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5270,"byte_end":5272,"line_start":57,"line_end":57,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":921},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5274,"byte_end":5279,"line_start":57,"line_end":57,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3622},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5281,"byte_end":5286,"line_start":57,"line_end":57,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":949},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5321,"byte_end":5325,"line_start":60,"line_end":60,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":952},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5327,"byte_end":5332,"line_start":60,"line_end":60,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":956},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5334,"byte_end":5339,"line_start":60,"line_end":60,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":961},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5341,"byte_end":5346,"line_start":60,"line_end":60,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3632},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5348,"byte_end":5352,"line_start":60,"line_end":60,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3654},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5354,"byte_end":5359,"line_start":60,"line_end":60,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3682},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5361,"byte_end":5366,"line_start":60,"line_end":60,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3716},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5368,"byte_end":5373,"line_start":60,"line_end":60,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":990},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5524,"byte_end":5530,"line_start":68,"line_end":68,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3798},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5532,"byte_end":5538,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1021},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5706,"byte_end":5714,"line_start":77,"line_end":77,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1024},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5716,"byte_end":5725,"line_start":77,"line_end":77,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1028},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5727,"byte_end":5736,"line_start":77,"line_end":77,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1033},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5738,"byte_end":5747,"line_start":77,"line_end":77,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3806},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5749,"byte_end":5756,"line_start":77,"line_end":77,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3824},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5758,"byte_end":5766,"line_start":77,"line_end":77,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3847},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5768,"byte_end":5776,"line_start":77,"line_end":77,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3875},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5778,"byte_end":5786,"line_start":77,"line_end":77,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1062},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5962,"byte_end":5972,"line_start":86,"line_end":86,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3950},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5974,"byte_end":5983,"line_start":86,"line_end":86,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3958},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":6137,"byte_end":6143,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":295},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3273,"byte_end":3282,"line_start":95,"line_end":95,"column_start":40,"column_end":49},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":735},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3284,"byte_end":3296,"line_start":95,"line_end":95,"column_start":51,"column_end":63},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":82},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121236,"byte_end":121247,"line_start":9,"line_end":9,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":4,"index":68},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121249,"byte_end":121255,"line_start":9,"line_end":9,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":4,"index":97},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121257,"byte_end":121266,"line_start":9,"line_end":9,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":3975},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121382,"byte_end":121387,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":3990},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121389,"byte_end":121396,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4004},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121398,"byte_end":121404,"line_start":16,"line_end":16,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4016},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121406,"byte_end":121415,"line_start":16,"line_end":16,"column_start":29,"column_end":38},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":1264},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121417,"byte_end":121423,"line_start":16,"line_end":16,"column_start":40,"column_end":46},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":1316},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121425,"byte_end":121434,"line_start":16,"line_end":16,"column_start":48,"column_end":57},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4046},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121436,"byte_end":121443,"line_start":16,"line_end":16,"column_start":59,"column_end":66},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":1397},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121445,"byte_end":121449,"line_start":16,"line_end":16,"column_start":68,"column_end":72},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":1452},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121451,"byte_end":121458,"line_start":16,"line_end":16,"column_start":74,"column_end":81},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4077},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121460,"byte_end":121464,"line_start":16,"line_end":16,"column_start":83,"column_end":87},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":1555},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121466,"byte_end":121473,"line_start":16,"line_end":16,"column_start":89,"column_end":96},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":1604},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121479,"byte_end":121482,"line_start":17,"line_end":17,"column_start":5,"column_end":8},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4108},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121484,"byte_end":121488,"line_start":17,"line_end":17,"column_start":10,"column_end":14},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":1727},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121490,"byte_end":121494,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4124},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121496,"byte_end":121504,"line_start":17,"line_end":17,"column_start":22,"column_end":30},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2026},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121506,"byte_end":121510,"line_start":17,"line_end":17,"column_start":32,"column_end":36},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4116},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121512,"byte_end":121526,"line_start":17,"line_end":17,"column_start":38,"column_end":52},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4136},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121528,"byte_end":121532,"line_start":17,"line_end":17,"column_start":54,"column_end":58},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":1789},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121534,"byte_end":121543,"line_start":17,"line_end":17,"column_start":60,"column_end":69},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2082},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121545,"byte_end":121554,"line_start":17,"line_end":17,"column_start":71,"column_end":80},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4089},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121556,"byte_end":121568,"line_start":17,"line_end":17,"column_start":82,"column_end":94},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4160},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121570,"byte_end":121574,"line_start":17,"line_end":17,"column_start":96,"column_end":100},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":1872},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121580,"byte_end":121589,"line_start":18,"line_end":18,"column_start":5,"column_end":14},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":1929},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121591,"byte_end":121595,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4192},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121597,"byte_end":121600,"line_start":18,"line_end":18,"column_start":22,"column_end":25},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2869},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122197,"byte_end":122207,"line_start":41,"line_end":41,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2188},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122209,"byte_end":122216,"line_start":41,"line_end":41,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4229},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122218,"byte_end":122225,"line_start":41,"line_end":41,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2330},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122227,"byte_end":122237,"line_start":41,"line_end":41,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2279},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122239,"byte_end":122248,"line_start":41,"line_end":41,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4251},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122250,"byte_end":122260,"line_start":41,"line_end":41,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2455},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122262,"byte_end":122268,"line_start":41,"line_end":41,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2406},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122270,"byte_end":122275,"line_start":41,"line_end":41,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2505},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122277,"byte_end":122283,"line_start":41,"line_end":41,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4325},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122289,"byte_end":122299,"line_start":42,"line_end":42,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4339},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122301,"byte_end":122310,"line_start":42,"line_end":42,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2628},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122312,"byte_end":122321,"line_start":42,"line_end":42,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2682},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122323,"byte_end":122335,"line_start":42,"line_end":42,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4312},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122337,"byte_end":122347,"line_start":42,"line_end":42,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2818},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122349,"byte_end":122356,"line_start":42,"line_end":42,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2586},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122358,"byte_end":122368,"line_start":42,"line_end":42,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4278},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122370,"byte_end":122377,"line_start":42,"line_end":42,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2918},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122383,"byte_end":122395,"line_start":43,"line_end":43,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2964},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122397,"byte_end":122409,"line_start":43,"line_end":43,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2874},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122411,"byte_end":122420,"line_start":43,"line_end":43,"column_start":33,"column_end":42},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":3036},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122744,"byte_end":122748,"line_start":57,"line_end":57,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4380},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122750,"byte_end":122754,"line_start":57,"line_end":57,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":3054},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122793,"byte_end":122799,"line_start":60,"line_end":60,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4386},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122801,"byte_end":122807,"line_start":60,"line_end":60,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":3078},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122844,"byte_end":122849,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4392},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122851,"byte_end":122856,"line_start":63,"line_end":63,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":3103},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122891,"byte_end":122895,"line_start":66,"line_end":66,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4398},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122897,"byte_end":122901,"line_start":66,"line_end":66,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":3129},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122942,"byte_end":122949,"line_start":69,"line_end":69,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4407},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122951,"byte_end":122958,"line_start":69,"line_end":69,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":3159},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122999,"byte_end":123006,"line_start":72,"line_end":72,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":3151},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":123008,"byte_end":123014,"line_start":72,"line_end":72,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":3184},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":123053,"byte_end":123059,"line_start":75,"line_end":75,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4413},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":123061,"byte_end":123067,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":3222},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":123106,"byte_end":123112,"line_start":78,"line_end":78,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":3227},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":123114,"byte_end":123120,"line_start":78,"line_end":78,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2082},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3355,"byte_end":3364,"line_start":98,"line_end":98,"column_start":40,"column_end":49},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2964},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3366,"byte_end":3378,"line_start":98,"line_end":98,"column_start":51,"column_end":63},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":142},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342638,"byte_end":342649,"line_start":13,"line_end":13,"column_start":45,"column_end":56},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":3266}},{"kind":"Use","ref_id":{"krate":0,"index":3275},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342687,"byte_end":342695,"line_start":17,"line_end":17,"column_start":23,"column_end":31},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":3266}},{"kind":"Use","ref_id":{"krate":0,"index":3276},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342697,"byte_end":342710,"line_start":17,"line_end":17,"column_start":33,"column_end":46},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":3266}},{"kind":"Use","ref_id":{"krate":1,"index":8002},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342743,"byte_end":342750,"line_start":19,"line_end":19,"column_start":30,"column_end":37},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":3266}},{"kind":"Use","ref_id":{"krate":1,"index":31553},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342752,"byte_end":342756,"line_start":19,"line_end":19,"column_start":39,"column_end":43},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":3266}},{"kind":"Use","ref_id":{"krate":1,"index":8012},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342758,"byte_end":342763,"line_start":19,"line_end":19,"column_start":45,"column_end":50},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":3266}},{"kind":"Use","ref_id":{"krate":1,"index":31593},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342765,"byte_end":342773,"line_start":19,"line_end":19,"column_start":52,"column_end":60},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":3266}},{"kind":"Use","ref_id":{"krate":1,"index":31602},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342775,"byte_end":342789,"line_start":19,"line_end":19,"column_start":62,"column_end":76},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":3266}},{"kind":"Use","ref_id":{"krate":17,"index":10},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342821,"byte_end":342826,"line_start":22,"line_end":22,"column_start":5,"column_end":10},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":3266}},{"kind":"Use","ref_id":{"krate":17,"index":13},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342828,"byte_end":342838,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":3266}},{"kind":"Use","ref_id":{"krate":17,"index":16},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342840,"byte_end":342850,"line_start":22,"line_end":22,"column_start":24,"column_end":34},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":3266}},{"kind":"Use","ref_id":{"krate":17,"index":89},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342856,"byte_end":342865,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":3266}},{"kind":"Use","ref_id":{"krate":17,"index":55},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342867,"byte_end":342881,"line_start":23,"line_end":23,"column_start":16,"column_end":30},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":3266}},{"kind":"Use","ref_id":{"krate":17,"index":110},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342883,"byte_end":342898,"line_start":23,"line_end":23,"column_start":32,"column_end":47},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":3266}},{"kind":"Use","ref_id":{"krate":17,"index":151},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342926,"byte_end":342936,"line_start":26,"line_end":26,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":3266}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":0,"byte_end":3844,"line_start":1,"line_end":122,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":1119},{"krate":0,"index":1122},{"krate":0,"index":3263},{"krate":0,"index":3266},{"krate":0,"index":3294}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":313,"byte_end":319,"line_start":7,"line_end":7,"column_start":35,"column_end":41}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":322,"byte_end":410,"line_start":8,"line_end":8,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":578,"byte_end":599,"line_start":11,"line_end":11,"column_start":1,"column_end":22}},{"value":"allow(clippy :: mem_replace_with_default)","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":832,"byte_end":875,"line_start":16,"line_end":16,"column_start":1,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":9},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":14},{"krate":0,"index":18},{"krate":0,"index":316},{"krate":0,"index":327},{"krate":0,"index":763},{"krate":0,"index":775},{"krate":0,"index":797},{"krate":0,"index":800},{"krate":0,"index":823},{"krate":0,"index":826},{"krate":0,"index":850},{"krate":0,"index":853},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":898},{"krate":0,"index":901},{"krate":0,"index":929},{"krate":0,"index":934},{"krate":0,"index":967},{"krate":0,"index":976},{"krate":0,"index":1002},{"krate":0,"index":1005},{"krate":0,"index":1039},{"krate":0,"index":1048},{"krate":0,"index":1070},{"krate":0,"index":1073},{"krate":0,"index":1115},{"krate":0,"index":1116}],"decl_id":null,"docs":" Futures","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":40},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":24785,"byte_end":24792,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":42}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":24706,"byte_end":24773,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":69},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":26182,"byte_end":26195,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"FlattenStream","qualname":"::future::future::flatten_stream::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":71}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](super::FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":26122,"byte_end":26170,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3315},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":28975,"byte_end":28979,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":3317}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":28896,"byte_end":28963,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30819,"byte_end":30829,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"fn () -> Fuse<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3324},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/into_stream.rs","byte_start":31759,"byte_end":31769,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"IntoStream","qualname":"::future::future::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":3326}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/into_stream.rs","byte_start":31682,"byte_end":31730,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3333},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":32790,"byte_end":32793,"line_start":9,"line_end":9,"column_start":12,"column_end":15},"name":"Map","qualname":"::future::future::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":3336},{"krate":0,"index":3337}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":32711,"byte_end":32778,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3347},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/then.rs","byte_start":34066,"byte_end":34070,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Then","qualname":"::future::future::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":3351}],"decl_id":null,"docs":" Future for the [`then`](super::FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/then.rs","byte_start":33987,"byte_end":34054,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3360},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35310,"byte_end":35317,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Inspect","qualname":"::future::future::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":3363},{"krate":0,"index":3364}],"decl_id":null,"docs":" Future for the [`inspect`](super::FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35231,"byte_end":35298,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3374},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36590,"byte_end":36599,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"UnitError","qualname":"::future::future::unit_error::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":3376}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36511,"byte_end":36578,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3383},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37530,"byte_end":37540,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"NeverError","qualname":"::future::future::never_error::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":3385}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37451,"byte_end":37518,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":295},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":8944,"byte_end":8953,"line_start":85,"line_end":85,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9785,"byte_end":9788,"line_start":108,"line_end":108,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"fn <U, F> (self, f: F) -> Map<Self, F>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10811,"byte_end":10815,"line_start":140,"line_end":140,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"fn <Fut, F> (self, f: F) -> Then<Self, Fut, F>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11685,"byte_end":11696,"line_start":171,"line_end":171,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"fn <B> (self) -> Either<Self, B>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12501,"byte_end":12513,"line_start":201,"line_end":201,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"fn <A> (self) -> Either<A, Self>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13258,"byte_end":13269,"line_start":227,"line_end":227,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"fn (self) -> IntoStream<Self>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14100,"byte_end":14107,"line_start":256,"line_end":256,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"fn (self) -> Flatten<Self>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15212,"byte_end":15226,"line_start":290,"line_end":290,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"fn (self) -> FlattenStream<Self>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16262,"byte_end":16266,"line_start":314,"line_end":314,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"fn (self) -> Fuse<Self>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":17106,"byte_end":17113,"line_start":340,"line_end":340,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"fn <F> (self, f: F) -> Inspect<Self, F>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22021,"byte_end":22031,"line_start":486,"line_end":486,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"fn (self) -> UnitError<Self>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22270,"byte_end":22281,"line_start":495,"line_end":495,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"fn (self) -> NeverError<Self>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22463,"byte_end":22473,"line_start":503,"line_end":503,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Self::Output>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23869,"byte_end":23881,"line_start":541,"line_end":541,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"fn (mut self) -> Option<Self::Output>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3410},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/and_then.rs","byte_start":58104,"byte_end":58111,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::future::try_future::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":3414}],"decl_id":null,"docs":" Future for the [`and_then`](super::TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/and_then.rs","byte_start":58025,"byte_end":58092,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3423},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":59667,"byte_end":59674,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"ErrInto","qualname":"::future::try_future::err_into::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":3426},{"krate":0,"index":3427}],"decl_id":null,"docs":" Future for the [`err_into`](super::TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":59588,"byte_end":59655,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3435},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":60860,"byte_end":60869,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"InspectOk","qualname":"::future::try_future::inspect_ok::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":3438},{"krate":0,"index":3439}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":60781,"byte_end":60848,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3449},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":62198,"byte_end":62208,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"InspectErr","qualname":"::future::try_future::inspect_err::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":3452},{"krate":0,"index":3453}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":62119,"byte_end":62186,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3463},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/into_future.rs","byte_start":63533,"byte_end":63543,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":3465}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/into_future.rs","byte_start":63454,"byte_end":63521,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3472},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":64477,"byte_end":64483,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"MapErr","qualname":"::future::try_future::map_err::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":3475},{"krate":0,"index":3476}],"decl_id":null,"docs":" Future for the [`map_err`](super::TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":64398,"byte_end":64465,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3486},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":65875,"byte_end":65880,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"MapOk","qualname":"::future::try_future::map_ok::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":3489},{"krate":0,"index":3490}],"decl_id":null,"docs":" Future for the [`map_ok`](super::TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":65796,"byte_end":65863,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3500},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":67287,"byte_end":67298,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"MapOkOrElse","qualname":"::future::try_future::map_ok_or_else::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":3504},{"krate":0,"index":3505},{"krate":0,"index":3506}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](super::TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":67208,"byte_end":67275,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3519},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/or_else.rs","byte_start":69052,"byte_end":69058,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"OrElse","qualname":"::future::try_future::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":3523}],"decl_id":null,"docs":" Future for the [`or_else`](super::TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/or_else.rs","byte_start":68973,"byte_end":69040,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":618},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":70709,"byte_end":70725,"line_start":13,"line_end":13,"column_start":12,"column_end":28},"name":"TryFlattenStream","qualname":"::future::try_future::try_flatten_stream::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":620}],"decl_id":null,"docs":" Stream for the [`try_flatten_stream`](super::TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":70649,"byte_end":70697,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3535},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":73031,"byte_end":73043,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"UnwrapOrElse","qualname":"::future::try_future::unwrap_or_else::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":3538},{"krate":0,"index":3539}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](super::TryFutureExt::unwrap_or_else)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":72952,"byte_end":73019,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":735},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":42204,"byte_end":42216,"line_start":80,"line_end":80,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":736},{"krate":0,"index":739},{"krate":0,"index":743},{"krate":0,"index":746},{"krate":0,"index":748},{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":756},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":761},{"krate":0,"index":762}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44874,"byte_end":44880,"line_start":159,"line_end":159,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"fn <T, F> (self, f: F) -> MapOk<Self, F>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":46398,"byte_end":46412,"line_start":199,"line_end":199,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"fn <T, E, F> (self, e: E, f: F) -> MapOkOrElse<Self, F, E>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":48072,"byte_end":48079,"line_start":247,"line_end":247,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"fn <E, F> (self, f: F) -> MapErr<Self, F>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":49128,"byte_end":49136,"line_start":277,"line_end":277,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"fn <E> (self) -> ErrInto<Self, E>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":50652,"byte_end":50660,"line_start":321,"line_end":321,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"fn <Fut, F> (self, f: F) -> AndThen<Self, Fut, F>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":52232,"byte_end":52239,"line_start":366,"line_end":366,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"fn <Fut, F> (self, f: F) -> OrElse<Self, Fut, F>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":53166,"byte_end":53176,"line_start":393,"line_end":393,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"fn <F> (self, f: F) -> InspectOk<Self, F>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54051,"byte_end":54062,"line_start":419,"line_end":419,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"fn <F> (self, f: F) -> InspectErr<Self, F>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55159,"byte_end":55177,"line_start":452,"line_end":452,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"fn (self) -> TryFlattenStream<Self>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56174,"byte_end":56188,"line_start":482,"line_end":482,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"fn <F> (self, f: F) -> UnwrapOrElse<Self, F>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Unwraps this future's ouput, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57358,"byte_end":57369,"line_start":521,"line_end":521,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"fn (self) -> IntoFuture<Self>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57577,"byte_end":57591,"line_start":530,"line_end":530,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Result<Self::Ok, Self::Error>>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3585},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83139,"byte_end":83143,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":3587}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83060,"byte_end":83127,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":785},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83684,"byte_end":83688,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"fn <F, R> (f: F) -> Lazy<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3591},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":84424,"byte_end":84431,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":3593}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":84345,"byte_end":84412,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":812},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":84950,"byte_end":84957,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"fn <T> () -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3599},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":85669,"byte_end":85675,"line_start":14,"line_end":14,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":3597},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3602},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":85729,"byte_end":85733,"line_start":16,"line_end":16,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":3597},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3605},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":85895,"byte_end":85899,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":3597},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3597},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":85605,"byte_end":85614,"line_start":12,"line_end":12,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"MaybeDone::{Future, Done, Gone}","parent":null,"children":[{"krate":0,"index":3599},{"krate":0,"index":3602},{"krate":0,"index":3605}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":837},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86478,"byte_end":86488,"line_start":42,"line_end":42,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"fn <Fut> (future: Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86905,"byte_end":86915,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"fn (self: Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86884,"byte_end":86893,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":87292,"byte_end":87303,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"fn (self: Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":87271,"byte_end":87280,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3610},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":89293,"byte_end":89305,"line_start":27,"line_end":27,"column_start":12,"column_end":24},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":3612}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":89214,"byte_end":89281,"line_start":26,"line_end":26,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":882},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":90356,"byte_end":90362,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":884}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":90277,"byte_end":90344,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":887},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":90949,"byte_end":90956,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"fn <T, F> (f: F) -> PollFn<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3622},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":91676,"byte_end":91681,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":91597,"byte_end":91664,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":91804,"byte_end":91814,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"fn (mut self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":91783,"byte_end":91792,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":921},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92449,"byte_end":92454,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"fn <T> (t: T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":923},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92766,"byte_end":92768,"line_start":63,"line_end":63,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"fn <T, E> (t: T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":926},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":93099,"byte_end":93102,"line_start":79,"line_end":79,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"fn <T, E> (err: E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3632},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":95382,"byte_end":95386,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":3635},{"krate":0,"index":3636}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":93566,"byte_end":93633,"line_start":17,"line_end":17,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3654},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":95452,"byte_end":95457,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":3658},{"krate":0,"index":3659},{"krate":0,"index":3660}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":93566,"byte_end":93633,"line_start":17,"line_end":17,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3682},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":95529,"byte_end":95534,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":3687},{"krate":0,"index":3688},{"krate":0,"index":3689},{"krate":0,"index":3690}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":93566,"byte_end":93633,"line_start":17,"line_end":17,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3716},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":95612,"byte_end":95617,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":3722},{"krate":0,"index":3723},{"krate":0,"index":3724},{"krate":0,"index":3725},{"krate":0,"index":3726}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":93566,"byte_end":93633,"line_start":17,"line_end":17,"column_start":9,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":949},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96232,"byte_end":96236,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"fn <Fut1, Fut2> (future1: Fut1, future2: Fut2) -> Join<Fut1, Fut2>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":952},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96782,"byte_end":96787,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"fn <Fut1, Fut2, Fut3> (future1: Fut1, future2: Fut2, future3: Fut3) -> Join3<Fut1, Fut2, Fut3>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":956},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97370,"byte_end":97375,"line_start":166,"line_end":166,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"fn <Fut1, Fut2, Fut3, Fut4> (future1: Fut1, future2: Fut2, future3: Fut3, future4: Fut4) -> Join4<Fut1, Fut2, Fut3, Fut4>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":961},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":98047,"byte_end":98052,"line_start":199,"line_end":199,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"fn <Fut1, Fut2, Fut3, Fut4, Fut5> (future1: Fut1, future2: Fut2, future3: Fut3, future4: Fut4, future5: Fut5) -> Join5<Fut1, Fut2, Fut3, Fut4, Fut5>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3798},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":98670,"byte_end":98676,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":3801}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":98574,"byte_end":98641,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":990},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":99945,"byte_end":99951,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"fn <A, B> (future1: A, future2: B) -> Select<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3806},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":104557,"byte_end":104564,"line_start":106,"line_end":106,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":3809},{"krate":0,"index":3810}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":101370,"byte_end":101437,"line_start":16,"line_end":16,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3824},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":104634,"byte_end":104642,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":3828},{"krate":0,"index":3829},{"krate":0,"index":3830}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":101370,"byte_end":101437,"line_start":16,"line_end":16,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3847},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":104718,"byte_end":104726,"line_start":112,"line_end":112,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":3852},{"krate":0,"index":3853},{"krate":0,"index":3854},{"krate":0,"index":3855}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":101370,"byte_end":101437,"line_start":16,"line_end":16,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3875},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":104808,"byte_end":104816,"line_start":115,"line_end":115,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":3881},{"krate":0,"index":3882},{"krate":0,"index":3883},{"krate":0,"index":3884},{"krate":0,"index":3885}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":101370,"byte_end":101437,"line_start":16,"line_end":16,"column_start":9,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":1021},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":106088,"byte_end":106096,"line_start":160,"line_end":160,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"fn <Fut1, Fut2> (future1: Fut1, future2: Fut2) -> TryJoin<Fut1, Fut2>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1024},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":106689,"byte_end":106698,"line_start":184,"line_end":184,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"fn <Fut1, Fut2, Fut3> (future1: Fut1, future2: Fut2, future3: Fut3) -> TryJoin3<Fut1, Fut2, Fut3>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1028},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":107438,"byte_end":107447,"line_start":214,"line_end":214,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"fn <Fut1, Fut2, Fut3, Fut4> (future1: Fut1, future2: Fut2, future3: Fut3, future4: Fut4) -> TryJoin4<Fut1, Fut2, Fut3, Fut4>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1033},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":108321,"byte_end":108330,"line_start":247,"line_end":247,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"fn <Fut1, Fut2, Fut3, Fut4, Fut5> (future1: Fut1, future2: Fut2, future3: Fut3, future4: Fut4, future5: Fut5) -> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3950},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":109058,"byte_end":109067,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":3953}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":108962,"byte_end":109029,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1062},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":110652,"byte_end":110662,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"fn <A, B> (future1: A, future2: B) -> TrySelect<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3961},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":112201,"byte_end":112205,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":3958},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3964},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":112248,"byte_end":112253,"line_start":15,"line_end":15,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":3958},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3958},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":112149,"byte_end":112155,"line_start":11,"line_end":11,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"Either::{Left, Right}","parent":null,"children":[{"krate":0,"index":3961},{"krate":0,"index":3964}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single\n type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":112452,"byte_end":112464,"line_start":22,"line_end":22,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"fn (self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":112844,"byte_end":112857,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"fn (self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":113145,"byte_end":113155,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1122},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":1123},{"krate":0,"index":1127},{"krate":0,"index":2138},{"krate":0,"index":2164},{"krate":0,"index":3007},{"krate":0,"index":3028},{"krate":0,"index":3043},{"krate":0,"index":3046},{"krate":0,"index":3066},{"krate":0,"index":3069},{"krate":0,"index":3090},{"krate":0,"index":3093},{"krate":0,"index":3117},{"krate":0,"index":3120},{"krate":0,"index":3141},{"krate":0,"index":3144},{"krate":0,"index":3167},{"krate":0,"index":3170},{"krate":0,"index":3206},{"krate":0,"index":3209},{"krate":0,"index":3260}],"decl_id":null,"docs":" Streams","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3975},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chain.rs","byte_start":165325,"byte_end":165330,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":3978},{"krate":0,"index":3979}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chain.rs","byte_start":165265,"byte_end":165313,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3990},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":167488,"byte_end":167495,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":3993},{"krate":0,"index":3994}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":167409,"byte_end":167476,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4004},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":168984,"byte_end":168990,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":4006},{"krate":0,"index":4007}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":168905,"byte_end":168972,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4016},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":170874,"byte_end":170883,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":4018},{"krate":0,"index":4019}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":170814,"byte_end":170862,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":171316,"byte_end":171323,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Enumerate<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":171633,"byte_end":171640,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Enumerate<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":171969,"byte_end":171980,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Enumerate<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1241},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":172289,"byte_end":172299,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Enumerate<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1264},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":173677,"byte_end":173683,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1271}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":173617,"byte_end":173665,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":174916,"byte_end":174923,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Filter<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":175233,"byte_end":175240,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Filter<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":175569,"byte_end":175580,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Filter<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":175889,"byte_end":175899,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Filter<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1316},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":178349,"byte_end":178358,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":178289,"byte_end":178337,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1337},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":179297,"byte_end":179304,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FilterMap<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1338},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":179614,"byte_end":179621,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FilterMap<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1339},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":179950,"byte_end":179961,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FilterMap<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1340},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":180270,"byte_end":180280,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FilterMap<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4046},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":182502,"byte_end":182509,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":4048},{"krate":0,"index":4049}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":182442,"byte_end":182490,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":183061,"byte_end":183068,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Flatten<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1373},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":183378,"byte_end":183385,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Flatten<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":183714,"byte_end":183725,"line_start":63,"line_end":63,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Flatten<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1375},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":184034,"byte_end":184044,"line_start":71,"line_end":71,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Flatten<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1397},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":185591,"byte_end":185595,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":185512,"byte_end":185579,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1452},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":188240,"byte_end":188247,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":188161,"byte_end":188228,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4077},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":190498,"byte_end":190502,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":4079},{"krate":0,"index":4080}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":190438,"byte_end":190486,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1501},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":191035,"byte_end":191042,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1502},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":191196,"byte_end":191203,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Fuse<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1503},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":191513,"byte_end":191520,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Fuse<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":191849,"byte_end":191860,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Fuse<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":192169,"byte_end":192179,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Fuse<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4089},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":193509,"byte_end":193521,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":4091}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":193430,"byte_end":193497,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":194192,"byte_end":194199,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"fn (&self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1532},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":194810,"byte_end":194817,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"fn (&mut self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1533},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":195443,"byte_end":195454,"line_start":59,"line_end":59,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":196069,"byte_end":196079,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"fn (self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1555},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":197071,"byte_end":197078,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Inspect","qualname":"::stream::stream::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":1558},{"krate":0,"index":1559}],"decl_id":null,"docs":" Stream for the [`inspect`](super::StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":197011,"byte_end":197059,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1571},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":197757,"byte_end":197764,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Inspect<St, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1572},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":198074,"byte_end":198081,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Inspect<St, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1573},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":198410,"byte_end":198421,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Inspect<St, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1574},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":198730,"byte_end":198740,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Inspect<St, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1604},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":200187,"byte_end":200190,"line_start":11,"line_end":11,"column_start":12,"column_end":15},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":1607},{"krate":0,"index":1608}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":200127,"byte_end":200175,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1621},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":200852,"byte_end":200859,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Map<St, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1622},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":201169,"byte_end":201176,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Map<St, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1623},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":201505,"byte_end":201516,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Map<St, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1624},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":201825,"byte_end":201835,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Map<St, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4108},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":203127,"byte_end":203131,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":4111}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":203048,"byte_end":203115,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4116},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/select_next_some.rs","byte_start":204137,"byte_end":204151,"line_start":11,"line_end":11,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":4119}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/select_next_some.rs","byte_start":204058,"byte_end":204125,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4124},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":205665,"byte_end":205673,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":4126},{"krate":0,"index":4127}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":205605,"byte_end":205653,"line_start":18,"line_end":18,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":206174,"byte_end":206181,"line_start":39,"line_end":39,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Peekable<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1713},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":206500,"byte_end":206507,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Peekable<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1714},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":206841,"byte_end":206852,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Peekable<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1715},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":207175,"byte_end":207185,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Peekable<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1716},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":207399,"byte_end":207403,"line_start":71,"line_end":71,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"fn (self: Pin<&mut Self>) -> Peek<'_, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a `Peek` future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":208745,"byte_end":208754,"line_start":103,"line_end":103,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1727},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":210237,"byte_end":210241,"line_start":155,"line_end":155,"column_start":12,"column_end":16},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":1730}],"decl_id":null,"docs":" Future for the [`Peekable::peek()`](self::Peekable::peek) function from [`Peekable`]\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":210177,"byte_end":210225,"line_start":154,"line_end":154,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4136},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":211676,"byte_end":211680,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":4138},{"krate":0,"index":4139}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":211616,"byte_end":211664,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1763},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":212115,"byte_end":212122,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Skip<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1764},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":212432,"byte_end":212439,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Skip<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1765},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":212768,"byte_end":212779,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Skip<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1766},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":213088,"byte_end":213098,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Skip<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1789},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":214700,"byte_end":214709,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":1793},{"krate":0,"index":1794},{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":1797}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":214640,"byte_end":214688,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1812},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":216103,"byte_end":216110,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<SkipWhile<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1813},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":216420,"byte_end":216427,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SkipWhile<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1814},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":216756,"byte_end":216767,"line_start":79,"line_end":79,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<SkipWhile<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1815},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":217076,"byte_end":217086,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SkipWhile<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4160},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":219658,"byte_end":219662,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":4162},{"krate":0,"index":4163}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":219598,"byte_end":219646,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1846},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":220097,"byte_end":220104,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1847},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":220414,"byte_end":220421,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1848},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":220750,"byte_end":220761,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1849},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":221070,"byte_end":221080,"line_start":58,"line_end":58,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1872},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":222882,"byte_end":222891,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":1876},{"krate":0,"index":1877},{"krate":0,"index":1878},{"krate":0,"index":1879},{"krate":0,"index":1880}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":222822,"byte_end":222870,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1899},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":224318,"byte_end":224325,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TakeWhile<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1900},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":224635,"byte_end":224642,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TakeWhile<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1901},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":224971,"byte_end":224982,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<TakeWhile<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1902},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":225291,"byte_end":225301,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TakeWhile<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1929},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":227830,"byte_end":227834,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":1933},{"krate":0,"index":1934},{"krate":0,"index":1935}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":227770,"byte_end":227818,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1954},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":228775,"byte_end":228782,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Then<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1955},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":229092,"byte_end":229099,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Then<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1956},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":229428,"byte_end":229439,"line_start":71,"line_end":71,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Then<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1957},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":229748,"byte_end":229758,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Then<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4192},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":231754,"byte_end":231757,"line_start":11,"line_end":11,"column_start":12,"column_end":15},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":4195},{"krate":0,"index":4196},{"krate":0,"index":4197},{"krate":0,"index":4198}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":231694,"byte_end":231742,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1993},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":232696,"byte_end":232703,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"fn (&self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1994},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":233059,"byte_end":233066,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"fn (&mut self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1995},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":233441,"byte_end":233452,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1996},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":233958,"byte_end":233968,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"fn (self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2026},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":236821,"byte_end":236825,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":2031},{"krate":0,"index":2032},{"krate":0,"index":2033}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":236761,"byte_end":236809,"line_start":16,"line_end":16,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2059},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":238330,"byte_end":238337,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Scan<St, S, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2060},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":238647,"byte_end":238654,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Scan<St, S, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2061},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":238983,"byte_end":238994,"line_start":90,"line_end":90,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Scan<St, S, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2062},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":239303,"byte_end":239313,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Scan<St, S, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2082},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":128663,"byte_end":128672,"line_start":165,"line_end":165,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2092},{"krate":0,"index":2096},{"krate":0,"index":2099},{"krate":0,"index":2101},{"krate":0,"index":2102},{"krate":0,"index":2106},{"krate":0,"index":2107},{"krate":0,"index":2112},{"krate":0,"index":2115},{"krate":0,"index":2118},{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":2123},{"krate":0,"index":2124},{"krate":0,"index":2125},{"krate":0,"index":2127},{"krate":0,"index":2129},{"krate":0,"index":2130},{"krate":0,"index":2132},{"krate":0,"index":2134},{"krate":0,"index":2136},{"krate":0,"index":2137}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2083},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":129582,"byte_end":129586,"line_start":189,"line_end":189,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"fn (&mut self) -> Next<'_, Self>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2084},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":130785,"byte_end":130796,"line_start":224,"line_end":224,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"fn (self) -> StreamFuture<Self>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":131749,"byte_end":131752,"line_start":254,"line_end":254,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"fn <T, F> (self, f: F) -> Map<Self, F>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2088},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":133284,"byte_end":133293,"line_start":300,"line_end":300,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"fn (self) -> Enumerate<Self>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2089},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":134481,"byte_end":134487,"line_start":333,"line_end":333,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"fn <Fut, F> (self, f: F) -> Filter<Self, Fut, F>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2092},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":135780,"byte_end":135790,"line_start":367,"line_end":367,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"fn <Fut, T, F> (self, f: F) -> FilterMap<Self, Fut, F>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2096},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":136796,"byte_end":136800,"line_start":398,"line_end":398,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"fn <Fut, F> (self, f: F) -> Then<Self, Fut, F>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2099},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":137701,"byte_end":137708,"line_start":432,"line_end":432,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"fn <C> (self) -> Collect<Self, C>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2101},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":138878,"byte_end":138884,"line_start":471,"line_end":471,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"fn (self) -> Concat<Self>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2102},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":139897,"byte_end":139901,"line_start":499,"line_end":499,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"fn <T, Fut, F> (self, init: T, f: F) -> Fold<Self, Fut, T, F>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2106},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":141072,"byte_end":141079,"line_start":539,"line_end":539,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"fn (self) -> Flatten<Self>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2107},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":141999,"byte_end":142003,"line_start":569,"line_end":569,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"fn <S, B, Fut, F> (self, initial_state: S, f: F) -> Scan<Self, S, Fut, F>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state and produces a new stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":143024,"byte_end":143034,"line_start":600,"line_end":600,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"fn <Fut, F> (self, f: F) -> SkipWhile<Self, Fut, F>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":143988,"byte_end":143998,"line_start":630,"line_end":630,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"fn <Fut, F> (self, f: F) -> TakeWhile<Self, Fut, F>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2118},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":145258,"byte_end":145266,"line_start":672,"line_end":672,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"fn <Fut, F> (self, f: F) -> ForEach<Self, Fut, F>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2121},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":148268,"byte_end":148272,"line_start":757,"line_end":757,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"fn (self, n: usize) -> Take<Self>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2122},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":148905,"byte_end":148909,"line_start":780,"line_end":780,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"fn (self, n: usize) -> Skip<Self>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2123},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150498,"byte_end":150502,"line_start":826,"line_end":826,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"fn (self) -> Fuse<Self>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2124},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":151399,"byte_end":151405,"line_start":859,"line_end":859,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"fn (&mut self) -> &mut Self","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2125},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157422,"byte_end":157425,"line_start":1026,"line_end":1026,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"fn <St> (self, other: St) -> Zip<Self, St>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2127},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158289,"byte_end":158294,"line_start":1057,"line_end":1057,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"fn <St> (self, other: St) -> Chain<Self, St>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2129},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158600,"byte_end":158608,"line_start":1068,"line_end":1068,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"fn (self) -> Peekable<Self>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2130},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161660,"byte_end":161667,"line_start":1144,"line_end":1144,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"fn <F> (self, f: F) -> Inspect<Self, F>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2132},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162091,"byte_end":162102,"line_start":1157,"line_end":1157,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"fn <B> (self) -> Either<Self, B>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2134},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162523,"byte_end":162535,"line_start":1170,"line_end":1170,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"fn <B> (self) -> Either<B, Self>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2136},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162779,"byte_end":162794,"line_start":1180,"line_end":1180,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Option<Self::Item>>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2137},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164895,"byte_end":164911,"line_start":1235,"line_end":1235,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"fn (&mut self) -> SelectNextSome<'_, Self>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2188},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":271066,"byte_end":271073,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2194}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":271006,"byte_end":271054,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2213},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":272018,"byte_end":272025,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AndThen<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2214},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":272335,"byte_end":272342,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AndThen<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2215},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":272671,"byte_end":272682,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<AndThen<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2216},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":272991,"byte_end":273001,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AndThen<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4229},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":275116,"byte_end":275123,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"ErrInto","qualname":"::stream::try_stream::err_into::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":4232},{"krate":0,"index":4233}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":275056,"byte_end":275104,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2248},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":275502,"byte_end":275509,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ErrInto<St, E>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2249},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":275819,"byte_end":275826,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ErrInto<St, E>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2250},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":276155,"byte_end":276166,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<ErrInto<St, E>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2251},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":276475,"byte_end":276485,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ErrInto<St, E>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2279},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":277787,"byte_end":277796,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"InspectOk","qualname":"::stream::try_stream::inspect_ok::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":2282},{"krate":0,"index":2283}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":277727,"byte_end":277775,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2298},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":278498,"byte_end":278505,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<InspectOk<St, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2299},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":278815,"byte_end":278822,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<InspectOk<St, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2300},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":279151,"byte_end":279162,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<InspectOk<St, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2301},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":279471,"byte_end":279481,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<InspectOk<St, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2330},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":280853,"byte_end":280863,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"InspectErr","qualname":"::stream::try_stream::inspect_err::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":2333},{"krate":0,"index":2334}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":280793,"byte_end":280841,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2349},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":281573,"byte_end":281580,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<InspectErr<St, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2350},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":281890,"byte_end":281897,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<InspectErr<St, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2351},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":282226,"byte_end":282237,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<InspectErr<St, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2352},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":282546,"byte_end":282556,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<InspectErr<St, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4251},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":283888,"byte_end":283898,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":4253}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":283828,"byte_end":283876,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2380},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":284189,"byte_end":284196,"line_start":25,"line_end":25,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<IntoStream<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2381},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":284506,"byte_end":284513,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<IntoStream<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2382},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":284842,"byte_end":284853,"line_start":43,"line_end":43,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<IntoStream<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2383},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":285162,"byte_end":285172,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<IntoStream<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2406},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":286289,"byte_end":286294,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"MapOk","qualname":"::stream::try_stream::map_ok::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":2409},{"krate":0,"index":2410}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":286229,"byte_end":286277,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2422},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":286929,"byte_end":286936,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MapOk<St, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2423},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":287246,"byte_end":287253,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MapOk<St, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2424},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":287582,"byte_end":287593,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<MapOk<St, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2425},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":287902,"byte_end":287912,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MapOk<St, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2455},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":289228,"byte_end":289234,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"MapErr","qualname":"::stream::try_stream::map_err::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":2458},{"krate":0,"index":2459}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":289168,"byte_end":289216,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2471},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":289875,"byte_end":289882,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MapErr<St, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2472},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":290192,"byte_end":290199,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MapErr<St, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2473},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":290528,"byte_end":290539,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<MapErr<St, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2474},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":290848,"byte_end":290858,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MapErr<St, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2505},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":292221,"byte_end":292227,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":2509},{"krate":0,"index":2510},{"krate":0,"index":2511}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":292161,"byte_end":292209,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2530},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":293164,"byte_end":293171,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<OrElse<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2531},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":293481,"byte_end":293488,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OrElse<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2532},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":293817,"byte_end":293828,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<OrElse<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2533},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":294137,"byte_end":294147,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<OrElse<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4278},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":296304,"byte_end":296311,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":4281}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":296225,"byte_end":296292,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2586},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":297384,"byte_end":297394,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":2590},{"krate":0,"index":2591},{"krate":0,"index":2592}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":297305,"byte_end":297372,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2628},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":299483,"byte_end":299492,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":2632},{"krate":0,"index":2633},{"krate":0,"index":2634},{"krate":0,"index":2635}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":299423,"byte_end":299471,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2650},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":300662,"byte_end":300669,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TryFilter<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2651},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":300979,"byte_end":300986,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TryFilter<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2652},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":301315,"byte_end":301326,"line_start":78,"line_end":78,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<TryFilter<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2653},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":301635,"byte_end":301645,"line_start":86,"line_end":86,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TryFilter<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2682},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":304114,"byte_end":304126,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":2686},{"krate":0,"index":2687},{"krate":0,"index":2688}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":304054,"byte_end":304102,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2703},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":304977,"byte_end":304984,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TryFilterMap<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2704},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":305294,"byte_end":305301,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TryFilterMap<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2705},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":305630,"byte_end":305641,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<TryFilterMap<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2706},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":305950,"byte_end":305960,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TryFilterMap<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4312},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":308246,"byte_end":308256,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":4314},{"krate":0,"index":4315}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":308186,"byte_end":308234,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2739},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":308875,"byte_end":308882,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TryFlatten<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2740},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":309192,"byte_end":309199,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TryFlatten<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2741},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":309528,"byte_end":309539,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<TryFlatten<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2742},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":309848,"byte_end":309858,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TryFlatten<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4325},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":311752,"byte_end":311762,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":4328},{"krate":0,"index":4329}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":311673,"byte_end":311740,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4339},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_concat.rs","byte_start":313305,"byte_end":313314,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":4341},{"krate":0,"index":4342}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_concat.rs","byte_start":313226,"byte_end":313293,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2818},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":314948,"byte_end":314955,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":2823},{"krate":0,"index":2824},{"krate":0,"index":2825},{"krate":0,"index":2826}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":314869,"byte_end":314936,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":2869},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":320107,"byte_end":320117,"line_start":57,"line_end":57,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"fn <T, F, Fut, Item> (init: T, f: F) -> TryUnfold<T, F, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2874},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":320436,"byte_end":320445,"line_start":71,"line_end":71,"column_start":12,"column_end":21},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":2878},{"krate":0,"index":2879},{"krate":0,"index":2880}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":320376,"byte_end":320424,"line_start":70,"line_end":70,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2918},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":322602,"byte_end":322614,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":2922},{"krate":0,"index":2923},{"krate":0,"index":2924},{"krate":0,"index":2925},{"krate":0,"index":2926}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":322542,"byte_end":322590,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2945},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":324120,"byte_end":324127,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TrySkipWhile<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2946},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":324437,"byte_end":324444,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TrySkipWhile<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2947},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":324773,"byte_end":324784,"line_start":85,"line_end":85,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<TrySkipWhile<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2948},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":325093,"byte_end":325103,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TrySkipWhile<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2964},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":244638,"byte_end":244650,"line_start":112,"line_end":112,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":2965},{"krate":0,"index":2967},{"krate":0,"index":2970},{"krate":0,"index":2973},{"krate":0,"index":2976},{"krate":0,"index":2979},{"krate":0,"index":2981},{"krate":0,"index":2983},{"krate":0,"index":2984},{"krate":0,"index":2985},{"krate":0,"index":2988},{"krate":0,"index":2991},{"krate":0,"index":2993},{"krate":0,"index":2996},{"krate":0,"index":3000},{"krate":0,"index":3001},{"krate":0,"index":3005},{"krate":0,"index":3006}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2965},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":245192,"byte_end":245200,"line_start":130,"line_end":130,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"fn <E> (self) -> ErrInto<Self, E>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2967},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":245855,"byte_end":245861,"line_start":155,"line_end":155,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"fn <T, F> (self, f: F) -> MapOk<Self, F>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2970},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":246526,"byte_end":246533,"line_start":180,"line_end":180,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"fn <E, F> (self, f: F) -> MapErr<Self, F>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2973},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":248097,"byte_end":248105,"line_start":226,"line_end":226,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"fn <Fut, F> (self, f: F) -> AndThen<Self, Fut, F>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2976},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":249208,"byte_end":249215,"line_start":252,"line_end":252,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"fn <Fut, F> (self, f: F) -> OrElse<Self, Fut, F>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2979},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":249717,"byte_end":249727,"line_start":267,"line_end":267,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"fn <F> (self, f: F) -> InspectOk<Self, F>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2981},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":250165,"byte_end":250176,"line_start":280,"line_end":280,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"fn <F> (self, f: F) -> InspectErr<Self, F>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2983},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":251046,"byte_end":251057,"line_start":309,"line_end":309,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"fn (self) -> IntoStream<Self>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2984},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":251901,"byte_end":251909,"line_start":336,"line_end":336,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"fn (&mut self) -> TryNext<'_, Self>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2985},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":253202,"byte_end":253214,"line_start":376,"line_end":376,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"fn <Fut, F> (self, f: F) -> TryForEach<Self, Fut, F>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2988},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":254174,"byte_end":254188,"line_start":405,"line_end":405,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"fn <Fut, F> (self, f: F) -> TrySkipWhile<Self, Fut, F>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2991},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":257476,"byte_end":257487,"line_start":500,"line_end":500,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"fn <C> (self) -> TryCollect<Self, C>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2993},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":258914,"byte_end":258924,"line_start":537,"line_end":537,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"fn <Fut, F> (self, f: F) -> TryFilter<Self, Fut, F>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2996},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":260500,"byte_end":260514,"line_start":578,"line_end":578,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"fn <Fut, F, T> (self, f: F) -> TryFilterMap<Self, Fut, F>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3000},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":262162,"byte_end":262173,"line_start":625,"line_end":625,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"fn (self) -> TryFlatten<Self>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3001},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":263653,"byte_end":263661,"line_start":662,"line_end":662,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"fn <T, Fut, F> (self, init: T, f: F) -> TryFold<Self, Fut, T, F>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3005},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":265143,"byte_end":265153,"line_start":705,"line_end":705,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"fn (self) -> TryConcat<Self>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3006},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":268252,"byte_end":268271,"line_start":784,"line_end":784,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Option<Result<Self::Ok, Self::Error>>>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4380},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":327553,"byte_end":327557,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4382}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":327493,"byte_end":327541,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3036},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":328075,"byte_end":328079,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"fn <I> (i: I) -> Iter<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4386},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":328721,"byte_end":328727,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":4388}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":328661,"byte_end":328709,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3054},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":329251,"byte_end":329257,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"fn <T> (item: T) -> Repeat<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4392},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":330042,"byte_end":330047,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":4394}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":329982,"byte_end":330030,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3078},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":330215,"byte_end":330220,"line_start":16,"line_end":16,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"fn <T> () -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3103},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":331154,"byte_end":331158,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"fn <Fut> (future: Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4398},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":331426,"byte_end":331430,"line_start":27,"line_end":27,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":4400}],"decl_id":null,"docs":" A stream which emits single element and then EOF.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":331366,"byte_end":331414,"line_start":26,"line_end":26,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4407},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":332526,"byte_end":332533,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":4409}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":332466,"byte_end":332514,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3129},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":332709,"byte_end":332716,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"fn <T> () -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3151},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":333422,"byte_end":333428,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":3153}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":333362,"byte_end":333410,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3159},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":334116,"byte_end":334123,"line_start":40,"line_end":40,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"fn <T, F> (f: F) -> PollFn<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4413},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":334728,"byte_end":334734,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":4416},{"krate":0,"index":4417},{"krate":0,"index":4418}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":334668,"byte_end":334716,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3184},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":335350,"byte_end":335356,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"fn <St1, St2> (stream1: St1, stream2: St2) -> Select<St1, St2>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3190},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":335735,"byte_end":335742,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"fn (&self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3191},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":336098,"byte_end":336105,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"fn (&mut self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3192},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":336480,"byte_end":336491,"line_start":59,"line_end":59,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3193},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":336997,"byte_end":337007,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"fn (self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3222},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":340351,"byte_end":340357,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"fn <T, F, Fut, Item> (init: T, f: F) -> Unfold<T, F, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3227},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":340673,"byte_end":340679,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":3231},{"krate":0,"index":3232},{"krate":0,"index":3233}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":340613,"byte_end":340661,"line_start":59,"line_end":59,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":3266},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":4430},{"krate":0,"index":3267},{"krate":0,"index":3277},{"krate":0,"index":3280},{"krate":0,"index":3286},{"krate":0,"index":3293}],"decl_id":null,"docs":" Task notification\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3275},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":343547,"byte_end":343555,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3276},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":346202,"byte_end":346215,"line_start":95,"line_end":95,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3294},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","parent":null,"children":[{"krate":0,"index":3295}],"decl_id":null,"docs":" Definition of the `Never` type,\n a stand-in for the `!` type until it becomes stable.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3295},"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":349348,"byte_end":349353,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":24876,"byte_end":24883,"line_start":16,"line_end":16,"column_start":11,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3296},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":25160,"byte_end":25167,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":25441,"byte_end":25448,"line_start":40,"line_end":40,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":25601,"byte_end":25608,"line_start":47,"line_end":47,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":26268,"byte_end":26281,"line_start":14,"line_end":14,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3299},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":26510,"byte_end":26523,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":26955,"byte_end":26960,"line_start":43,"line_end":43,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":27659,"byte_end":27672,"line_start":57,"line_end":57,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":27954,"byte_end":27967,"line_start":69,"line_end":69,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29033,"byte_end":29037,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3321},{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30920,"byte_end":30924,"line_start":72,"line_end":72,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":31038,"byte_end":31042,"line_start":78,"line_end":78,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/into_stream.rs","byte_start":31819,"byte_end":31829,"line_start":15,"line_end":15,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3330},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/into_stream.rs","byte_start":32041,"byte_end":32051,"line_start":25,"line_end":25,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/into_stream.rs","byte_start":32376,"byte_end":32386,"line_start":39,"line_end":39,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":32855,"byte_end":32858,"line_start":14,"line_end":14,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3342},{"krate":0,"index":3345},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":33098,"byte_end":33101,"line_start":24,"line_end":24,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":33146,"byte_end":33149,"line_start":26,"line_end":26,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":33309,"byte_end":33312,"line_start":33,"line_end":33,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/then.rs","byte_start":34144,"byte_end":34148,"line_start":14,"line_end":14,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3357},{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/then.rs","byte_start":34473,"byte_end":34477,"line_start":28,"line_end":28,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/then.rs","byte_start":34687,"byte_end":34691,"line_start":36,"line_end":36,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35409,"byte_end":35416,"line_start":14,"line_end":14,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3369},{"krate":0,"index":3372},{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35679,"byte_end":35686,"line_start":26,"line_end":26,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35728,"byte_end":35735,"line_start":28,"line_end":28,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35904,"byte_end":35911,"line_start":35,"line_end":35,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36637,"byte_end":36646,"line_start":13,"line_end":13,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3380},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36808,"byte_end":36817,"line_start":21,"line_end":21,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36866,"byte_end":36875,"line_start":23,"line_end":23,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36978,"byte_end":36987,"line_start":27,"line_end":27,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37578,"byte_end":37588,"line_start":14,"line_end":14,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3389},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37752,"byte_end":37762,"line_start":22,"line_end":22,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37811,"byte_end":37821,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37924,"byte_end":37934,"line_start":28,"line_end":28,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/chain.rs","byte_start":38481,"byte_end":38486,"line_start":13,"line_end":13,"column_start":48,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/chain.rs","byte_start":38532,"byte_end":38537,"line_start":15,"line_end":15,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/chain.rs","byte_start":38698,"byte_end":38703,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":8823,"byte_end":8824,"line_start":81,"line_end":81,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/and_then.rs","byte_start":58192,"byte_end":58199,"line_start":14,"line_end":14,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3420},{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/and_then.rs","byte_start":58550,"byte_end":58557,"line_start":28,"line_end":28,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/and_then.rs","byte_start":58806,"byte_end":58813,"line_start":38,"line_end":38,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":59764,"byte_end":59771,"line_start":15,"line_end":15,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":59797,"byte_end":59804,"line_start":17,"line_end":17,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3432},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":60025,"byte_end":60032,"line_start":28,"line_end":28,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":60209,"byte_end":60216,"line_start":35,"line_end":35,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":60948,"byte_end":60957,"line_start":14,"line_end":14,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":60983,"byte_end":60992,"line_start":16,"line_end":16,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3444},{"krate":0,"index":3447},{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":61249,"byte_end":61258,"line_start":29,"line_end":29,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":61441,"byte_end":61450,"line_start":39,"line_end":39,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":421},{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":62287,"byte_end":62297,"line_start":14,"line_end":14,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":62323,"byte_end":62333,"line_start":16,"line_end":16,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3458},{"krate":0,"index":3461},{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":62593,"byte_end":62603,"line_start":29,"line_end":29,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":62789,"byte_end":62799,"line_start":39,"line_end":39,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/into_future.rs","byte_start":63581,"byte_end":63591,"line_start":13,"line_end":13,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3469},{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/into_future.rs","byte_start":63793,"byte_end":63803,"line_start":22,"line_end":22,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/into_future.rs","byte_start":63914,"byte_end":63924,"line_start":26,"line_end":26,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":64545,"byte_end":64551,"line_start":14,"line_end":14,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3481},{"krate":0,"index":3484},{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":64800,"byte_end":64806,"line_start":24,"line_end":24,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":64851,"byte_end":64857,"line_start":26,"line_end":26,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":65019,"byte_end":65025,"line_start":33,"line_end":33,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":65942,"byte_end":65947,"line_start":14,"line_end":14,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3495},{"krate":0,"index":3498},{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":66193,"byte_end":66198,"line_start":24,"line_end":24,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":66243,"byte_end":66248,"line_start":26,"line_end":26,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":66419,"byte_end":66424,"line_start":35,"line_end":35,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":67384,"byte_end":67395,"line_start":15,"line_end":15,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3512},{"krate":0,"index":3515},{"krate":0,"index":3517},{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":67697,"byte_end":67708,"line_start":26,"line_end":26,"column_start":34,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":67759,"byte_end":67770,"line_start":28,"line_end":28,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":68005,"byte_end":68016,"line_start":38,"line_end":38,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/or_else.rs","byte_start":69139,"byte_end":69145,"line_start":14,"line_end":14,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3529},{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/or_else.rs","byte_start":69494,"byte_end":69500,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/or_else.rs","byte_start":69746,"byte_end":69752,"line_start":38,"line_end":38,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":70818,"byte_end":70834,"line_start":20,"line_end":20,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3532},{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":71119,"byte_end":71135,"line_start":34,"line_end":34,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":71411,"byte_end":71427,"line_start":46,"line_end":46,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":71622,"byte_end":71638,"line_start":56,"line_end":56,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":632},{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":73105,"byte_end":73117,"line_start":15,"line_end":15,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3544},{"krate":0,"index":3547},{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":73384,"byte_end":73396,"line_start":25,"line_end":25,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":73438,"byte_end":73450,"line_start":27,"line_end":27,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":73627,"byte_end":73639,"line_start":36,"line_end":36,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":74578,"byte_end":74595,"line_start":18,"line_end":18,"column_start":21,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":74685,"byte_end":74702,"line_start":25,"line_end":25,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":74963,"byte_end":74980,"line_start":37,"line_end":37,"column_start":11,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3549},{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":75415,"byte_end":75420,"line_start":60,"line_end":60,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":76153,"byte_end":76158,"line_start":75,"line_end":75,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":77015,"byte_end":77032,"line_start":100,"line_end":100,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":77369,"byte_end":77386,"line_start":114,"line_end":114,"column_start":22,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":700},{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_chain.rs","byte_start":80023,"byte_end":80031,"line_start":13,"line_end":13,"column_start":48,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_chain.rs","byte_start":80207,"byte_end":80215,"line_start":22,"line_end":22,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":42132,"byte_end":42135,"line_start":77,"line_end":77,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83235,"byte_end":83239,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83812,"byte_end":83816,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83948,"byte_end":83952,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":84499,"byte_end":84506,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":85057,"byte_end":85064,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":85209,"byte_end":85216,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":85243,"byte_end":85250,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":85998,"byte_end":86007,"line_start":23,"line_end":23,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86586,"byte_end":86595,"line_start":46,"line_end":46,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":841},{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":87801,"byte_end":87810,"line_start":81,"line_end":81,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":88026,"byte_end":88035,"line_start":90,"line_end":90,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":89345,"byte_end":89357,"line_start":31,"line_end":31,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3619}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":89432,"byte_end":89444,"line_start":35,"line_end":35,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":866},{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":89774,"byte_end":89786,"line_start":49,"line_end":49,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":89974,"byte_end":89986,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":90399,"byte_end":90405,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":91075,"byte_end":91081,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":91223,"byte_end":91229,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":896},{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":91706,"byte_end":91711,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":91890,"byte_end":91895,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":91927,"byte_end":91932,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92029,"byte_end":92034,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":919},{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":98750,"byte_end":98756,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":100119,"byte_end":100125,"line_start":53,"line_end":53,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":996},{"krate":0,"index":997}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":100828,"byte_end":100834,"line_start":75,"line_end":75,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":109141,"byte_end":109150,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":110856,"byte_end":110865,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1068},{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":112275,"byte_end":112281,"line_start":18,"line_end":18,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":112666,"byte_end":112672,"line_start":30,"line_end":30,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":113053,"byte_end":113059,"line_start":42,"line_end":42,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":113300,"byte_end":113306,"line_start":52,"line_end":52,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1100},{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":113735,"byte_end":113741,"line_start":69,"line_end":69,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1105}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":114017,"byte_end":114023,"line_start":82,"line_end":82,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1109},{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":114465,"byte_end":114471,"line_start":99,"line_end":99,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chain.rs","byte_start":165478,"byte_end":165483,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3984},{"krate":0,"index":3987},{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chain.rs","byte_start":165826,"byte_end":165831,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chain.rs","byte_start":166036,"byte_end":166041,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":167572,"byte_end":167579,"line_start":16,"line_end":16,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":167620,"byte_end":167627,"line_start":18,"line_end":18,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3999},{"krate":0,"index":4002},{"krate":0,"index":1183},{"krate":0,"index":1184}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":168013,"byte_end":168020,"line_start":34,"line_end":34,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":168196,"byte_end":168203,"line_start":43,"line_end":43,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1192},{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":169088,"byte_end":169094,"line_start":15,"line_end":15,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":169112,"byte_end":169118,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4011},{"krate":0,"index":4014},{"krate":0,"index":1213}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":169473,"byte_end":169479,"line_start":33,"line_end":33,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1216},{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":170276,"byte_end":170282,"line_start":61,"line_end":61,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":170953,"byte_end":170962,"line_start":16,"line_end":16,"column_start":27,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":170988,"byte_end":170997,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4023},{"krate":0,"index":4026},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":172390,"byte_end":172399,"line_start":62,"line_end":62,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1244}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":172517,"byte_end":172526,"line_start":68,"line_end":68,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":173842,"byte_end":173848,"line_start":21,"line_end":21,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":173943,"byte_end":173949,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1280}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":174341,"byte_end":174347,"line_start":42,"line_end":42,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4028},{"krate":0,"index":4031},{"krate":0,"index":4033},{"krate":0,"index":4036},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":175976,"byte_end":175982,"line_start":94,"line_end":94,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":176250,"byte_end":176256,"line_start":104,"line_end":104,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":178455,"byte_end":178464,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":178550,"byte_end":178559,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1331}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":178856,"byte_end":178865,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4038},{"krate":0,"index":4041},{"krate":0,"index":4043},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":180360,"byte_end":180369,"line_start":83,"line_end":83,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":180640,"byte_end":180649,"line_start":93,"line_end":93,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":182604,"byte_end":182611,"line_start":19,"line_end":19,"column_start":20,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":182681,"byte_end":182688,"line_start":26,"line_end":26,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4053},{"krate":0,"index":4056}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":182805,"byte_end":182812,"line_start":34,"line_end":34,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":184113,"byte_end":184120,"line_start":76,"line_end":76,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1378}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":184302,"byte_end":184309,"line_start":86,"line_end":86,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1381},{"krate":0,"index":1382}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":185733,"byte_end":185737,"line_start":17,"line_end":17,"column_start":45,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":185792,"byte_end":185796,"line_start":19,"line_end":19,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1416}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":186152,"byte_end":186156,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4059},{"krate":0,"index":4062},{"krate":0,"index":4064},{"krate":0,"index":4066},{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":186631,"byte_end":186635,"line_start":54,"line_end":54,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1428}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":186882,"byte_end":186886,"line_start":64,"line_end":64,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1434},{"krate":0,"index":1435}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":188343,"byte_end":188350,"line_start":16,"line_end":16,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":188436,"byte_end":188443,"line_start":22,"line_end":22,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1467}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":188736,"byte_end":188743,"line_start":35,"line_end":35,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4069},{"krate":0,"index":4072},{"krate":0,"index":4074},{"krate":0,"index":1472}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":189139,"byte_end":189146,"line_start":53,"line_end":53,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1477}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":189397,"byte_end":189404,"line_start":63,"line_end":63,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1482},{"krate":0,"index":1483}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":190570,"byte_end":190574,"line_start":16,"line_end":16,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":190592,"byte_end":190596,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4084},{"krate":0,"index":4087},{"krate":0,"index":1500},{"krate":0,"index":1501},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":192255,"byte_end":192259,"line_start":68,"line_end":68,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":192357,"byte_end":192361,"line_start":74,"line_end":74,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":193581,"byte_end":193593,"line_start":15,"line_end":15,"column_start":27,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":193627,"byte_end":193639,"line_start":17,"line_end":17,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4095},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1533},{"krate":0,"index":1534}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":196172,"byte_end":196184,"line_start":77,"line_end":77,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1537}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":196304,"byte_end":196316,"line_start":83,"line_end":83,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1540},{"krate":0,"index":1541}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":197146,"byte_end":197153,"line_start":16,"line_end":16,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":197192,"byte_end":197199,"line_start":18,"line_end":18,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1566}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":197418,"byte_end":197425,"line_start":29,"line_end":29,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4098},{"krate":0,"index":4101},{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1574}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":198812,"byte_end":198819,"line_start":73,"line_end":73,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1578}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":199138,"byte_end":199145,"line_start":89,"line_end":89,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1589}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":200258,"byte_end":200261,"line_start":16,"line_end":16,"column_start":30,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":200300,"byte_end":200303,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1615}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":200521,"byte_end":200524,"line_start":29,"line_end":29,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4103},{"krate":0,"index":4106},{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1624}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":201910,"byte_end":201913,"line_start":73,"line_end":73,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1629}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":202094,"byte_end":202097,"line_start":82,"line_end":82,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1638}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":203212,"byte_end":203216,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":203267,"byte_end":203271,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1657}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":203422,"byte_end":203426,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1660}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":203565,"byte_end":203569,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1663},{"krate":0,"index":1664}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/select_next_some.rs","byte_start":204218,"byte_end":204232,"line_start":15,"line_end":15,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1679}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/select_next_some.rs","byte_start":204393,"byte_end":204407,"line_start":21,"line_end":21,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1682}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/select_next_some.rs","byte_start":204551,"byte_end":204565,"line_start":27,"line_end":27,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1685},{"krate":0,"index":1686}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":205778,"byte_end":205786,"line_start":24,"line_end":24,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":205812,"byte_end":205820,"line_start":26,"line_end":26,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4131},{"krate":0,"index":4134},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":209041,"byte_end":209049,"line_start":114,"line_end":114,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1721}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":209191,"byte_end":209199,"line_start":120,"line_end":120,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1724},{"krate":0,"index":1725},{"krate":0,"index":1726}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":210336,"byte_end":210340,"line_start":159,"line_end":159,"column_start":28,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":210377,"byte_end":210381,"line_start":161,"line_end":161,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1735}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":210652,"byte_end":210656,"line_start":173,"line_end":173,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1738}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":210767,"byte_end":210771,"line_start":179,"line_end":179,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1742},{"krate":0,"index":1743}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":211754,"byte_end":211758,"line_start":16,"line_end":16,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":211784,"byte_end":211788,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4143},{"krate":0,"index":4146},{"krate":0,"index":1762},{"krate":0,"index":1763},{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1766}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":213180,"byte_end":213184,"line_start":62,"line_end":62,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1769}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":213302,"byte_end":213306,"line_start":68,"line_end":68,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1774}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":214911,"byte_end":214920,"line_start":20,"line_end":20,"column_start":51,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":214969,"byte_end":214978,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1806}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":215430,"byte_end":215439,"line_start":38,"line_end":38,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4148},{"krate":0,"index":4151},{"krate":0,"index":4153},{"krate":0,"index":4156},{"krate":0,"index":4158},{"krate":0,"index":1811},{"krate":0,"index":1812},{"krate":0,"index":1813},{"krate":0,"index":1814},{"krate":0,"index":1815}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":217163,"byte_end":217172,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1820}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":217432,"byte_end":217441,"line_start":102,"line_end":102,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1825},{"krate":0,"index":1826},{"krate":0,"index":1827}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":219736,"byte_end":219740,"line_start":17,"line_end":17,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":219766,"byte_end":219770,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4167},{"krate":0,"index":4170},{"krate":0,"index":1845},{"krate":0,"index":1846},{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1849}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":221144,"byte_end":221148,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1852},{"krate":0,"index":1853},{"krate":0,"index":1854}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":222131,"byte_end":222135,"line_start":102,"line_end":102,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1857}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":223083,"byte_end":223092,"line_start":20,"line_end":20,"column_start":51,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":223141,"byte_end":223150,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1889}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":223606,"byte_end":223615,"line_start":38,"line_end":38,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4172},{"krate":0,"index":4175},{"krate":0,"index":4177},{"krate":0,"index":4180},{"krate":0,"index":4182}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":223851,"byte_end":223860,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1902}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":225373,"byte_end":225382,"line_start":94,"line_end":94,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1909}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":226953,"byte_end":226962,"line_start":146,"line_end":146,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1914}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":227944,"byte_end":227948,"line_start":18,"line_end":18,"column_start":42,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":227997,"byte_end":228001,"line_start":20,"line_end":20,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1944}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":228291,"byte_end":228295,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4184},{"krate":0,"index":4187},{"krate":0,"index":4190}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":228431,"byte_end":228435,"line_start":39,"line_end":39,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1953},{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1956},{"krate":0,"index":1957}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":229835,"byte_end":229839,"line_start":84,"line_end":84,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1962}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":230077,"byte_end":230081,"line_start":94,"line_end":94,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1967},{"krate":0,"index":1968},{"krate":0,"index":1969}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":232026,"byte_end":232029,"line_start":19,"line_end":19,"column_start":26,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":232159,"byte_end":232162,"line_start":27,"line_end":27,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4203},{"krate":0,"index":4206},{"krate":0,"index":4209},{"krate":0,"index":4211},{"krate":0,"index":1992},{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1996}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":234094,"byte_end":234097,"line_start":78,"line_end":78,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2000}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":234288,"byte_end":234291,"line_start":86,"line_end":86,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2004},{"krate":0,"index":2005},{"krate":0,"index":2006}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":236984,"byte_end":236988,"line_start":23,"line_end":23,"column_start":54,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":237043,"byte_end":237047,"line_start":25,"line_end":25,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2044}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":237533,"byte_end":237537,"line_start":42,"line_end":42,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4213},{"krate":0,"index":4216},{"krate":0,"index":4218},{"krate":0,"index":2051}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":237829,"byte_end":237833,"line_start":53,"line_end":53,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2062}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":239391,"byte_end":239395,"line_start":103,"line_end":103,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2069},{"krate":0,"index":2070},{"krate":0,"index":2071}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":240613,"byte_end":240617,"line_start":145,"line_end":145,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2078}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":128530,"byte_end":128531,"line_start":161,"line_end":161,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":271183,"byte_end":271190,"line_start":18,"line_end":18,"column_start":42,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":271239,"byte_end":271246,"line_start":20,"line_end":20,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2203}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":271539,"byte_end":271546,"line_start":33,"line_end":33,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4221},{"krate":0,"index":4224},{"krate":0,"index":4227}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":271682,"byte_end":271689,"line_start":39,"line_end":39,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2212},{"krate":0,"index":2213},{"krate":0,"index":2214},{"krate":0,"index":2215},{"krate":0,"index":2216}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":273073,"byte_end":273080,"line_start":81,"line_end":81,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2223}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":274260,"byte_end":274267,"line_start":118,"line_end":118,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2228}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":275210,"byte_end":275217,"line_start":17,"line_end":17,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":275241,"byte_end":275248,"line_start":19,"line_end":19,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4238},{"krate":0,"index":2247},{"krate":0,"index":2248},{"krate":0,"index":2249},{"krate":0,"index":2250},{"krate":0,"index":2251}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":276557,"byte_end":276564,"line_start":59,"line_end":59,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2255}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":276743,"byte_end":276750,"line_start":69,"line_end":69,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2259},{"krate":0,"index":2260},{"krate":0,"index":2263}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":277864,"byte_end":277873,"line_start":17,"line_end":17,"column_start":30,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":277912,"byte_end":277921,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2290}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":278142,"byte_end":278151,"line_start":30,"line_end":30,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4241},{"krate":0,"index":4244}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":278236,"byte_end":278245,"line_start":35,"line_end":35,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2297},{"krate":0,"index":2298},{"krate":0,"index":2299},{"krate":0,"index":2300},{"krate":0,"index":2301}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":279553,"byte_end":279562,"line_start":77,"line_end":77,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2305}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":279740,"byte_end":279749,"line_start":87,"line_end":87,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2309},{"krate":0,"index":2310},{"krate":0,"index":2314}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":280931,"byte_end":280941,"line_start":17,"line_end":17,"column_start":30,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":280980,"byte_end":280990,"line_start":19,"line_end":19,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2341}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":281212,"byte_end":281222,"line_start":30,"line_end":30,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4246},{"krate":0,"index":4249}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":281307,"byte_end":281317,"line_start":35,"line_end":35,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2348},{"krate":0,"index":2349},{"krate":0,"index":2350},{"krate":0,"index":2351},{"krate":0,"index":2352}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":282628,"byte_end":282638,"line_start":77,"line_end":77,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2356}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":282819,"byte_end":282829,"line_start":87,"line_end":87,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2360},{"krate":0,"index":2361},{"krate":0,"index":2365}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":283933,"byte_end":283943,"line_start":15,"line_end":15,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4257},{"krate":0,"index":2379},{"krate":0,"index":2380},{"krate":0,"index":2381},{"krate":0,"index":2382},{"krate":0,"index":2383}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":285266,"byte_end":285276,"line_start":56,"line_end":56,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2386}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":285397,"byte_end":285407,"line_start":62,"line_end":62,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2389},{"krate":0,"index":2390},{"krate":0,"index":2391}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":286362,"byte_end":286367,"line_start":16,"line_end":16,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":286406,"byte_end":286411,"line_start":18,"line_end":18,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2417}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":286628,"byte_end":286633,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4260},{"krate":0,"index":4263},{"krate":0,"index":2421},{"krate":0,"index":2422},{"krate":0,"index":2423},{"krate":0,"index":2424},{"krate":0,"index":2425}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":287987,"byte_end":287992,"line_start":71,"line_end":71,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2430}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":288177,"byte_end":288182,"line_start":81,"line_end":81,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2435},{"krate":0,"index":2436},{"krate":0,"index":2440}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":289302,"byte_end":289308,"line_start":16,"line_end":16,"column_start":30,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":289347,"byte_end":289353,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2466}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":289571,"byte_end":289577,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4265},{"krate":0,"index":4268},{"krate":0,"index":2470},{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2473},{"krate":0,"index":2474}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":290933,"byte_end":290939,"line_start":71,"line_end":71,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2479}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":291127,"byte_end":291133,"line_start":81,"line_end":81,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2484},{"krate":0,"index":2485},{"krate":0,"index":2489}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":292337,"byte_end":292343,"line_start":18,"line_end":18,"column_start":42,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":292392,"byte_end":292398,"line_start":20,"line_end":20,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2520}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":292690,"byte_end":292696,"line_start":33,"line_end":33,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4270},{"krate":0,"index":4273},{"krate":0,"index":4276}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":292832,"byte_end":292838,"line_start":39,"line_end":39,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2529},{"krate":0,"index":2530},{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2533}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":294219,"byte_end":294225,"line_start":81,"line_end":81,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2538},{"krate":0,"index":2539},{"krate":0,"index":2540}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":295470,"byte_end":295476,"line_start":119,"line_end":119,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2545}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":296392,"byte_end":296399,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":296453,"byte_end":296460,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2564}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":296626,"byte_end":296633,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":2567}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":296775,"byte_end":296782,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2570},{"krate":0,"index":2571}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":297504,"byte_end":297514,"line_start":16,"line_end":16,"column_start":42,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":297563,"byte_end":297573,"line_start":18,"line_end":18,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2601}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":297869,"byte_end":297879,"line_start":31,"line_end":31,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4286},{"krate":0,"index":4289},{"krate":0,"index":4291},{"krate":0,"index":2606}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":298295,"byte_end":298305,"line_start":49,"line_end":49,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2611},{"krate":0,"index":2612}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":299651,"byte_end":299660,"line_start":22,"line_end":22,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":299754,"byte_end":299763,"line_start":26,"line_end":26,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2644}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":300159,"byte_end":300168,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4294},{"krate":0,"index":4297},{"krate":0,"index":4299},{"krate":0,"index":4302},{"krate":0,"index":2649},{"krate":0,"index":2650},{"krate":0,"index":2651},{"krate":0,"index":2652},{"krate":0,"index":2653}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":301722,"byte_end":301731,"line_start":91,"line_end":91,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2658}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":302000,"byte_end":302009,"line_start":101,"line_end":101,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2663},{"krate":0,"index":2664},{"krate":0,"index":2665}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":304223,"byte_end":304235,"line_start":19,"line_end":19,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":304317,"byte_end":304329,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2697}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":304629,"byte_end":304641,"line_start":36,"line_end":36,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4304},{"krate":0,"index":4307},{"krate":0,"index":4309},{"krate":0,"index":2702},{"krate":0,"index":2703},{"krate":0,"index":2704},{"krate":0,"index":2705},{"krate":0,"index":2706}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":306040,"byte_end":306052,"line_start":78,"line_end":78,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2712}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":306342,"byte_end":306354,"line_start":88,"line_end":88,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2718},{"krate":0,"index":2719},{"krate":0,"index":2720}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":308352,"byte_end":308362,"line_start":19,"line_end":19,"column_start":20,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":308433,"byte_end":308443,"line_start":26,"line_end":26,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4319},{"krate":0,"index":4322}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":308561,"byte_end":308571,"line_start":34,"line_end":34,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2738},{"krate":0,"index":2739},{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2742}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":309927,"byte_end":309937,"line_start":77,"line_end":77,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2745}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":310183,"byte_end":310193,"line_start":88,"line_end":88,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2748},{"krate":0,"index":2749}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":311837,"byte_end":311847,"line_start":16,"line_end":16,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4334},{"krate":0,"index":4337},{"krate":0,"index":2769},{"krate":0,"index":2770}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":312222,"byte_end":312232,"line_start":32,"line_end":32,"column_start":42,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":312272,"byte_end":312282,"line_start":34,"line_end":34,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2777}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":312470,"byte_end":312480,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2781},{"krate":0,"index":2782}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_concat.rs","byte_start":313416,"byte_end":313425,"line_start":15,"line_end":15,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_concat.rs","byte_start":313443,"byte_end":313452,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4346},{"krate":0,"index":4349},{"krate":0,"index":2798}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_concat.rs","byte_start":313796,"byte_end":313805,"line_start":33,"line_end":33,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2801},{"krate":0,"index":2802}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":315093,"byte_end":315100,"line_start":17,"line_end":17,"column_start":45,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":315155,"byte_end":315162,"line_start":19,"line_end":19,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2837}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":315521,"byte_end":315528,"line_start":34,"line_end":34,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4351},{"krate":0,"index":4354},{"krate":0,"index":4356},{"krate":0,"index":4358},{"krate":0,"index":2843}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":316028,"byte_end":316035,"line_start":54,"line_end":54,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2849}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":316301,"byte_end":316308,"line_start":64,"line_end":64,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2855},{"krate":0,"index":2856}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":320549,"byte_end":320558,"line_start":77,"line_end":77,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":320605,"byte_end":320614,"line_start":79,"line_end":79,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2889}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":320898,"byte_end":320907,"line_start":92,"line_end":92,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4361},{"krate":0,"index":4363},{"krate":0,"index":4365}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":321063,"byte_end":321072,"line_start":98,"line_end":98,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2899},{"krate":0,"index":2900}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":322820,"byte_end":322832,"line_start":21,"line_end":21,"column_start":54,"column_end":66},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":322881,"byte_end":322893,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2935}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":323349,"byte_end":323361,"line_start":39,"line_end":39,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4368}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":323453,"byte_end":323465,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4371},{"krate":0,"index":4373},{"krate":0,"index":4376},{"krate":0,"index":4378},{"krate":0,"index":2944},{"krate":0,"index":2945},{"krate":0,"index":2946},{"krate":0,"index":2947},{"krate":0,"index":2948}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":325175,"byte_end":325187,"line_start":98,"line_end":98,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2953},{"krate":0,"index":2954},{"krate":0,"index":2955}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":326819,"byte_end":326831,"line_start":146,"line_end":146,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2960}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":244570,"byte_end":244571,"line_start":109,"line_end":109,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":327597,"byte_end":327601,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":328207,"byte_end":328211,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3040},{"krate":0,"index":3041},{"krate":0,"index":3042}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":329345,"byte_end":329351,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":329378,"byte_end":329384,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3060},{"krate":0,"index":3061},{"krate":0,"index":3062}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":329691,"byte_end":329697,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3065}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":330309,"byte_end":330314,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":330346,"byte_end":330351,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3084}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":330436,"byte_end":330441,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3087},{"krate":0,"index":3088},{"krate":0,"index":3089}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":331492,"byte_end":331496,"line_start":31,"line_end":31,"column_start":28,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":331516,"byte_end":331520,"line_start":33,"line_end":33,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4404}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":331601,"byte_end":331605,"line_start":37,"line_end":37,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3111},{"krate":0,"index":3112},{"krate":0,"index":3113}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":332188,"byte_end":332192,"line_start":59,"line_end":59,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3116}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":332802,"byte_end":332809,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":332841,"byte_end":332848,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3135}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":332933,"byte_end":332940,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3138},{"krate":0,"index":3139},{"krate":0,"index":3140}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":333465,"byte_end":333471,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":333502,"byte_end":333508,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3158}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":334250,"byte_end":334256,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3165},{"krate":0,"index":3166}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":334853,"byte_end":334859,"line_start":15,"line_end":15,"column_start":40,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":335604,"byte_end":335610,"line_start":38,"line_end":38,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3190},{"krate":0,"index":3191},{"krate":0,"index":3192},{"krate":0,"index":3193}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":337133,"byte_end":337139,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3197}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":337357,"byte_end":337363,"line_start":84,"line_end":84,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3201},{"krate":0,"index":3202}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":340783,"byte_end":340789,"line_start":66,"line_end":66,"column_start":34,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":340836,"byte_end":340842,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3242}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Inherent","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":341123,"byte_end":341129,"line_start":81,"line_end":81,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4423},{"krate":0,"index":4425},{"krate":0,"index":4427}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":341290,"byte_end":341296,"line_start":87,"line_end":87,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3252}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":341522,"byte_end":341528,"line_start":96,"line_end":96,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3258},{"krate":0,"index":3259}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":343419,"byte_end":343421,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":343476,"byte_end":343478,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3226,"byte_end":3232,"line_start":94,"line_end":94,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":9}},{"kind":"Mod","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3308,"byte_end":3314,"line_start":97,"line_end":97,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1122}},{"kind":"Mod","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3500,"byte_end":3504,"line_start":105,"line_end":105,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3266}},{"kind":"Mod","span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3515,"byte_end":3520,"line_start":107,"line_end":107,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3294}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":24876,"byte_end":24883,"line_start":16,"line_end":16,"column_start":11,"column_end":18},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":40},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":25160,"byte_end":25167,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":40},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":25441,"byte_end":25448,"line_start":40,"line_end":40,"column_start":27,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":40},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":25601,"byte_end":25608,"line_start":47,"line_end":47,"column_start":22,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":40},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":26268,"byte_end":26281,"line_start":14,"line_end":14,"column_start":19,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":69},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":26510,"byte_end":26523,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":69},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":26955,"byte_end":26960,"line_start":43,"line_end":43,"column_start":15,"column_end":20},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":27659,"byte_end":27672,"line_start":57,"line_end":57,"column_start":27,"column_end":40},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":69},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":27954,"byte_end":27967,"line_start":69,"line_end":69,"column_start":22,"column_end":35},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":69},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29033,"byte_end":29037,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30920,"byte_end":30924,"line_start":72,"line_end":72,"column_start":35,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3315},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":31038,"byte_end":31042,"line_start":78,"line_end":78,"column_start":30,"column_end":34},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3315},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/into_stream.rs","byte_start":31819,"byte_end":31829,"line_start":15,"line_end":15,"column_start":19,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/into_stream.rs","byte_start":32041,"byte_end":32051,"line_start":25,"line_end":25,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3324},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/into_stream.rs","byte_start":32376,"byte_end":32386,"line_start":39,"line_end":39,"column_start":35,"column_end":45},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3324},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":32855,"byte_end":32858,"line_start":14,"line_end":14,"column_start":14,"column_end":17},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3333},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":33098,"byte_end":33101,"line_start":24,"line_end":24,"column_start":31,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3333},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":33146,"byte_end":33149,"line_start":26,"line_end":26,"column_start":33,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3333},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":33309,"byte_end":33312,"line_start":33,"line_end":33,"column_start":28,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3333},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/then.rs","byte_start":34144,"byte_end":34148,"line_start":14,"line_end":14,"column_start":21,"column_end":25},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/then.rs","byte_start":34473,"byte_end":34477,"line_start":28,"line_end":28,"column_start":37,"column_end":41},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3347},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/then.rs","byte_start":34687,"byte_end":34691,"line_start":36,"line_end":36,"column_start":32,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3347},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35409,"byte_end":35416,"line_start":14,"line_end":14,"column_start":44,"column_end":51},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":3360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35679,"byte_end":35686,"line_start":26,"line_end":26,"column_start":40,"column_end":47},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3360},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35728,"byte_end":35735,"line_start":28,"line_end":28,"column_start":30,"column_end":37},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":3360},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35904,"byte_end":35911,"line_start":35,"line_end":35,"column_start":25,"column_end":32},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":3360},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36637,"byte_end":36646,"line_start":13,"line_end":13,"column_start":11,"column_end":20},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":3374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36808,"byte_end":36817,"line_start":21,"line_end":21,"column_start":28,"column_end":37},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":3374},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36866,"byte_end":36875,"line_start":23,"line_end":23,"column_start":40,"column_end":49},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":3374},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36978,"byte_end":36987,"line_start":27,"line_end":27,"column_start":25,"column_end":34},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3374},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37578,"byte_end":37588,"line_start":14,"line_end":14,"column_start":11,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":3383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37752,"byte_end":37762,"line_start":22,"line_end":22,"column_start":28,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":3383},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37811,"byte_end":37821,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":3383},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37924,"byte_end":37934,"line_start":28,"line_end":28,"column_start":25,"column_end":35},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":3383},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/chain.rs","byte_start":38481,"byte_end":38486,"line_start":13,"line_end":13,"column_start":48,"column_end":53},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":3392},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/chain.rs","byte_start":38532,"byte_end":38537,"line_start":15,"line_end":15,"column_start":24,"column_end":29},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":3392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/chain.rs","byte_start":38698,"byte_end":38703,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":8823,"byte_end":8824,"line_start":81,"line_end":81,"column_start":31,"column_end":32},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":294},"to":{"krate":0,"index":295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":8955,"byte_end":8961,"line_start":85,"line_end":85,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":7931},"to":{"krate":0,"index":295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/and_then.rs","byte_start":58192,"byte_end":58199,"line_start":14,"line_end":14,"column_start":21,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/and_then.rs","byte_start":58550,"byte_end":58557,"line_start":28,"line_end":28,"column_start":37,"column_end":44},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":3410},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/and_then.rs","byte_start":58806,"byte_end":58813,"line_start":38,"line_end":38,"column_start":32,"column_end":39},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3410},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":59764,"byte_end":59771,"line_start":15,"line_end":15,"column_start":31,"column_end":38},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3423},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":59797,"byte_end":59804,"line_start":17,"line_end":17,"column_start":14,"column_end":21},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":60025,"byte_end":60032,"line_start":28,"line_end":28,"column_start":30,"column_end":37},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3423},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":60209,"byte_end":60216,"line_start":35,"line_end":35,"column_start":25,"column_end":32},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":3423},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":60948,"byte_end":60957,"line_start":14,"line_end":14,"column_start":31,"column_end":40},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":3435},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":60983,"byte_end":60992,"line_start":16,"line_end":16,"column_start":14,"column_end":23},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":3435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":61249,"byte_end":61258,"line_start":29,"line_end":29,"column_start":30,"column_end":39},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":3435},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":61441,"byte_end":61450,"line_start":39,"line_end":39,"column_start":25,"column_end":34},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3435},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":62287,"byte_end":62297,"line_start":14,"line_end":14,"column_start":31,"column_end":41},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":3449},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":62323,"byte_end":62333,"line_start":16,"line_end":16,"column_start":14,"column_end":24},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":3449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":62593,"byte_end":62603,"line_start":29,"line_end":29,"column_start":30,"column_end":40},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":3449},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":62789,"byte_end":62799,"line_start":39,"line_end":39,"column_start":25,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":3449},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/into_future.rs","byte_start":63581,"byte_end":63591,"line_start":13,"line_end":13,"column_start":11,"column_end":21},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":3463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/into_future.rs","byte_start":63793,"byte_end":63803,"line_start":22,"line_end":22,"column_start":52,"column_end":62},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":3463},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/into_future.rs","byte_start":63914,"byte_end":63924,"line_start":26,"line_end":26,"column_start":33,"column_end":43},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":3463},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":64545,"byte_end":64551,"line_start":14,"line_end":14,"column_start":14,"column_end":20},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":3472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":64800,"byte_end":64806,"line_start":24,"line_end":24,"column_start":31,"column_end":37},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3472},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":64851,"byte_end":64857,"line_start":26,"line_end":26,"column_start":33,"column_end":39},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3472},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":65019,"byte_end":65025,"line_start":33,"line_end":33,"column_start":28,"column_end":34},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3472},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":65942,"byte_end":65947,"line_start":14,"line_end":14,"column_start":14,"column_end":19},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":66193,"byte_end":66198,"line_start":24,"line_end":24,"column_start":31,"column_end":36},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3486},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":66243,"byte_end":66248,"line_start":26,"line_end":26,"column_start":33,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":3486},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":66419,"byte_end":66424,"line_start":35,"line_end":35,"column_start":28,"column_end":33},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":3486},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":67384,"byte_end":67395,"line_start":15,"line_end":15,"column_start":17,"column_end":28},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":3500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":67697,"byte_end":67708,"line_start":26,"line_end":26,"column_start":34,"column_end":45},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":3500},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":67759,"byte_end":67770,"line_start":28,"line_end":28,"column_start":36,"column_end":47},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":3500},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":68005,"byte_end":68016,"line_start":38,"line_end":38,"column_start":31,"column_end":42},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":3500},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/or_else.rs","byte_start":69139,"byte_end":69145,"line_start":14,"line_end":14,"column_start":21,"column_end":27},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":3519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/or_else.rs","byte_start":69494,"byte_end":69500,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3519},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/or_else.rs","byte_start":69746,"byte_end":69752,"line_start":38,"line_end":38,"column_start":32,"column_end":38},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":3519},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":70818,"byte_end":70834,"line_start":20,"line_end":20,"column_start":22,"column_end":38},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":618},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":71119,"byte_end":71135,"line_start":34,"line_end":34,"column_start":26,"column_end":42},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":618},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":71411,"byte_end":71427,"line_start":46,"line_end":46,"column_start":27,"column_end":43},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":618},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":71622,"byte_end":71638,"line_start":56,"line_end":56,"column_start":22,"column_end":38},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":618},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":73105,"byte_end":73117,"line_start":15,"line_end":15,"column_start":14,"column_end":26},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":3535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":73384,"byte_end":73396,"line_start":25,"line_end":25,"column_start":31,"column_end":43},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":3535},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":73438,"byte_end":73450,"line_start":27,"line_end":27,"column_start":30,"column_end":42},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":3535},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":73627,"byte_end":73639,"line_start":36,"line_end":36,"column_start":25,"column_end":37},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3535},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":74578,"byte_end":74595,"line_start":18,"line_end":18,"column_start":21,"column_end":38},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":677},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":74685,"byte_end":74702,"line_start":25,"line_end":25,"column_start":26,"column_end":43},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":677},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":74963,"byte_end":74980,"line_start":37,"line_end":37,"column_start":11,"column_end":28},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":75415,"byte_end":75420,"line_start":60,"line_end":60,"column_start":14,"column_end":19},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":3552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":76153,"byte_end":76158,"line_start":75,"line_end":75,"column_start":11,"column_end":16},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":3552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":77015,"byte_end":77032,"line_start":100,"line_end":100,"column_start":27,"column_end":44},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":677},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":77369,"byte_end":77386,"line_start":114,"line_end":114,"column_start":22,"column_end":39},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":677},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_chain.rs","byte_start":80023,"byte_end":80031,"line_start":13,"line_end":13,"column_start":48,"column_end":56},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":3567},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_chain.rs","byte_start":80207,"byte_end":80215,"line_start":22,"line_end":22,"column_start":24,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":42132,"byte_end":42135,"line_start":77,"line_end":77,"column_start":48,"column_end":51},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":734},"to":{"krate":0,"index":735}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":42218,"byte_end":42227,"line_start":80,"line_end":80,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":4,"index":32},"to":{"krate":0,"index":735}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83235,"byte_end":83239,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3585},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83812,"byte_end":83816,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3585},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83948,"byte_end":83952,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":3585},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":84499,"byte_end":84506,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":3591},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":85057,"byte_end":85064,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3591},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":85209,"byte_end":85216,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3591},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":85243,"byte_end":85250,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":3591},"to":{"krate":1,"index":2181}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":85998,"byte_end":86007,"line_start":23,"line_end":23,"column_start":37,"column_end":46},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3597},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86586,"byte_end":86595,"line_start":46,"line_end":46,"column_start":19,"column_end":28},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":87801,"byte_end":87810,"line_start":81,"line_end":81,"column_start":35,"column_end":44},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":3597},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":88026,"byte_end":88035,"line_start":90,"line_end":90,"column_start":30,"column_end":39},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":3597},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":89345,"byte_end":89357,"line_start":31,"line_end":31,"column_start":9,"column_end":21},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":89432,"byte_end":89444,"line_start":35,"line_end":35,"column_start":28,"column_end":40},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":3610},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":89774,"byte_end":89786,"line_start":49,"line_end":49,"column_start":38,"column_end":50},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":3610},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":89974,"byte_end":89986,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":3610},"to":{"krate":1,"index":2258}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":90399,"byte_end":90405,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":882},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":91075,"byte_end":91081,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":882},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":91223,"byte_end":91229,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":882},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":91706,"byte_end":91711,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":3622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":91890,"byte_end":91895,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":3622},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":91927,"byte_end":91932,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":3622},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92029,"byte_end":92034,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":3622},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":98750,"byte_end":98756,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":3798},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":100119,"byte_end":100125,"line_start":53,"line_end":53,"column_start":23,"column_end":29},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3798},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":100828,"byte_end":100834,"line_start":75,"line_end":75,"column_start":28,"column_end":34},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":3798},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":109141,"byte_end":109150,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":3950},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":110856,"byte_end":110865,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":3950},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":112275,"byte_end":112281,"line_start":18,"line_end":18,"column_start":15,"column_end":21},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":3958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":112666,"byte_end":112672,"line_start":30,"line_end":30,"column_start":15,"column_end":21},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":3958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":113053,"byte_end":113059,"line_start":42,"line_end":42,"column_start":9,"column_end":15},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":3958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":113300,"byte_end":113306,"line_start":52,"line_end":52,"column_start":23,"column_end":29},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":3958},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":113735,"byte_end":113741,"line_start":69,"line_end":69,"column_start":28,"column_end":34},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":3958},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":114017,"byte_end":114023,"line_start":82,"line_end":82,"column_start":23,"column_end":29},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":3958},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":114465,"byte_end":114471,"line_start":99,"line_end":99,"column_start":28,"column_end":34},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":3958},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chain.rs","byte_start":165478,"byte_end":165483,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":3975},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chain.rs","byte_start":165826,"byte_end":165831,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":3975},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chain.rs","byte_start":166036,"byte_end":166041,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":3975},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":167572,"byte_end":167579,"line_start":16,"line_end":16,"column_start":30,"column_end":37},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":3990},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":167620,"byte_end":167627,"line_start":18,"line_end":18,"column_start":30,"column_end":37},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":3990},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":168013,"byte_end":168020,"line_start":34,"line_end":34,"column_start":29,"column_end":36},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":3990},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":168196,"byte_end":168203,"line_start":43,"line_end":43,"column_start":24,"column_end":31},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":3990},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":169088,"byte_end":169094,"line_start":15,"line_end":15,"column_start":36,"column_end":42},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":4004},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":169112,"byte_end":169118,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":4004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":169473,"byte_end":169479,"line_start":33,"line_end":33,"column_start":21,"column_end":27},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":4004},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":170276,"byte_end":170282,"line_start":61,"line_end":61,"column_start":26,"column_end":32},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":4004},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":170953,"byte_end":170962,"line_start":16,"line_end":16,"column_start":27,"column_end":36},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":4016},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":170988,"byte_end":170997,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":4016},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":172390,"byte_end":172399,"line_start":62,"line_end":62,"column_start":48,"column_end":57},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":4016},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":172517,"byte_end":172526,"line_start":68,"line_end":68,"column_start":29,"column_end":38},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":4016},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":173842,"byte_end":173848,"line_start":21,"line_end":21,"column_start":28,"column_end":34},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1264},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":173943,"byte_end":173949,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1264},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":174341,"byte_end":174347,"line_start":42,"line_end":42,"column_start":18,"column_end":24},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":175976,"byte_end":175982,"line_start":94,"line_end":94,"column_start":34,"column_end":40},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1264},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":176250,"byte_end":176256,"line_start":104,"line_end":104,"column_start":29,"column_end":35},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1264},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":178455,"byte_end":178464,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1316},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":178550,"byte_end":178559,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1316},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":178856,"byte_end":178865,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":180360,"byte_end":180369,"line_start":83,"line_end":83,"column_start":37,"column_end":46},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1316},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":180640,"byte_end":180649,"line_start":93,"line_end":93,"column_start":32,"column_end":41},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1316},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":182604,"byte_end":182611,"line_start":19,"line_end":19,"column_start":20,"column_end":27},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":4046},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":182681,"byte_end":182688,"line_start":26,"line_end":26,"column_start":10,"column_end":17},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":4046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":182805,"byte_end":182812,"line_start":34,"line_end":34,"column_start":10,"column_end":17},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":4046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":184113,"byte_end":184120,"line_start":76,"line_end":76,"column_start":26,"column_end":33},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":4046},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":184302,"byte_end":184309,"line_start":86,"line_end":86,"column_start":21,"column_end":28},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":4046},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":185733,"byte_end":185737,"line_start":17,"line_end":17,"column_start":45,"column_end":49},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1397},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":185792,"byte_end":185796,"line_start":19,"line_end":19,"column_start":36,"column_end":40},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1397},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":186152,"byte_end":186156,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":186631,"byte_end":186635,"line_start":54,"line_end":54,"column_start":37,"column_end":41},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1397},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":186882,"byte_end":186886,"line_start":64,"line_end":64,"column_start":32,"column_end":36},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1397},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":188343,"byte_end":188350,"line_start":16,"line_end":16,"column_start":28,"column_end":35},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1452},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":188436,"byte_end":188443,"line_start":22,"line_end":22,"column_start":33,"column_end":40},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1452},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":188736,"byte_end":188743,"line_start":35,"line_end":35,"column_start":18,"column_end":25},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":189139,"byte_end":189146,"line_start":53,"line_end":53,"column_start":34,"column_end":41},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1452},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":189397,"byte_end":189404,"line_start":63,"line_end":63,"column_start":29,"column_end":36},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1452},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":190570,"byte_end":190574,"line_start":16,"line_end":16,"column_start":27,"column_end":31},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":4077},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":190592,"byte_end":190596,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":4077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":192255,"byte_end":192259,"line_start":68,"line_end":68,"column_start":33,"column_end":37},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":4077},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":192357,"byte_end":192361,"line_start":74,"line_end":74,"column_start":28,"column_end":32},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":4077},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":193581,"byte_end":193593,"line_start":15,"line_end":15,"column_start":27,"column_end":39},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":4089},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":193627,"byte_end":193639,"line_start":17,"line_end":17,"column_start":26,"column_end":38},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":4089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":196172,"byte_end":196184,"line_start":77,"line_end":77,"column_start":42,"column_end":54},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":4089},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":196304,"byte_end":196316,"line_start":83,"line_end":83,"column_start":37,"column_end":49},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":4089},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":197146,"byte_end":197153,"line_start":16,"line_end":16,"column_start":30,"column_end":37},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1555},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":197192,"byte_end":197199,"line_start":18,"line_end":18,"column_start":28,"column_end":35},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1555},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":197418,"byte_end":197425,"line_start":29,"line_end":29,"column_start":13,"column_end":20},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1555},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":198812,"byte_end":198819,"line_start":73,"line_end":73,"column_start":29,"column_end":36},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1555},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":199138,"byte_end":199145,"line_start":89,"line_end":89,"column_start":24,"column_end":31},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1555},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":200258,"byte_end":200261,"line_start":16,"line_end":16,"column_start":30,"column_end":33},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1604},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":200300,"byte_end":200303,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":1604},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":200521,"byte_end":200524,"line_start":29,"line_end":29,"column_start":16,"column_end":19},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":1604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":201910,"byte_end":201913,"line_start":73,"line_end":73,"column_start":32,"column_end":35},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1604},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":202094,"byte_end":202097,"line_start":82,"line_end":82,"column_start":27,"column_end":30},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":1604},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":203212,"byte_end":203216,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":4108},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":203267,"byte_end":203271,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":4108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":203422,"byte_end":203426,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":4108},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":203565,"byte_end":203569,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":4108},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/select_next_some.rs","byte_start":204218,"byte_end":204232,"line_start":15,"line_end":15,"column_start":22,"column_end":36},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":4116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/select_next_some.rs","byte_start":204393,"byte_end":204407,"line_start":21,"line_end":21,"column_start":56,"column_end":70},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":4116},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/select_next_some.rs","byte_start":204551,"byte_end":204565,"line_start":27,"line_end":27,"column_start":51,"column_end":65},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":4116},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":205778,"byte_end":205786,"line_start":24,"line_end":24,"column_start":36,"column_end":44},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":4124},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":205812,"byte_end":205820,"line_start":26,"line_end":26,"column_start":18,"column_end":26},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":4124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":209041,"byte_end":209049,"line_start":114,"line_end":114,"column_start":34,"column_end":42},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":4124},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":209191,"byte_end":209199,"line_start":120,"line_end":120,"column_start":28,"column_end":36},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4124},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":210336,"byte_end":210340,"line_start":159,"line_end":159,"column_start":28,"column_end":32},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1727},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":210377,"byte_end":210381,"line_start":161,"line_end":161,"column_start":25,"column_end":29},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1727},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":210652,"byte_end":210656,"line_start":173,"line_end":173,"column_start":34,"column_end":38},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1727},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":210767,"byte_end":210771,"line_start":179,"line_end":179,"column_start":25,"column_end":29},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1727},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":211754,"byte_end":211758,"line_start":16,"line_end":16,"column_start":27,"column_end":31},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":4136},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":211784,"byte_end":211788,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":4136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":213180,"byte_end":213184,"line_start":62,"line_end":62,"column_start":39,"column_end":43},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":4136},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":213302,"byte_end":213306,"line_start":68,"line_end":68,"column_start":29,"column_end":33},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":4136},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":214911,"byte_end":214920,"line_start":20,"line_end":20,"column_start":51,"column_end":60},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":1789},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":214969,"byte_end":214978,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":1789},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":215430,"byte_end":215439,"line_start":38,"line_end":38,"column_start":18,"column_end":27},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":1789},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":217163,"byte_end":217172,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":1789},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":217432,"byte_end":217441,"line_start":102,"line_end":102,"column_start":29,"column_end":38},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":1789},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":219736,"byte_end":219740,"line_start":17,"line_end":17,"column_start":27,"column_end":31},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":4160},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":219766,"byte_end":219770,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":4160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":221144,"byte_end":221148,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":4160},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":222131,"byte_end":222135,"line_start":102,"line_end":102,"column_start":26,"column_end":30},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":4160},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":223083,"byte_end":223092,"line_start":20,"line_end":20,"column_start":51,"column_end":60},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":1872},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":223141,"byte_end":223150,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":1872},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":223606,"byte_end":223615,"line_start":38,"line_end":38,"column_start":26,"column_end":35},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":1872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":223851,"byte_end":223860,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":1872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":225373,"byte_end":225382,"line_start":94,"line_end":94,"column_start":29,"column_end":38},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":1872},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":226953,"byte_end":226962,"line_start":146,"line_end":146,"column_start":34,"column_end":43},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":1872},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":227944,"byte_end":227948,"line_start":18,"line_end":18,"column_start":42,"column_end":46},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":1929},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":227997,"byte_end":228001,"line_start":20,"line_end":20,"column_start":33,"column_end":37},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":1929},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":228291,"byte_end":228295,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":1929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":228431,"byte_end":228435,"line_start":39,"line_end":39,"column_start":18,"column_end":22},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":1929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":229835,"byte_end":229839,"line_start":84,"line_end":84,"column_start":34,"column_end":38},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":1929},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":230077,"byte_end":230081,"line_start":94,"line_end":94,"column_start":29,"column_end":33},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":1929},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":232026,"byte_end":232029,"line_start":19,"line_end":19,"column_start":26,"column_end":29},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":4192},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":232159,"byte_end":232162,"line_start":27,"line_end":27,"column_start":32,"column_end":35},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":4192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":234094,"byte_end":234097,"line_start":78,"line_end":78,"column_start":32,"column_end":35},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":4192},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":234288,"byte_end":234291,"line_start":86,"line_end":86,"column_start":27,"column_end":30},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":4192},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":236984,"byte_end":236988,"line_start":23,"line_end":23,"column_start":54,"column_end":58},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":2026},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":237043,"byte_end":237047,"line_start":25,"line_end":25,"column_start":36,"column_end":40},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2026},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":237533,"byte_end":237537,"line_start":42,"line_end":42,"column_start":29,"column_end":33},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":237829,"byte_end":237833,"line_start":53,"line_end":53,"column_start":24,"column_end":28},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":2026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":239391,"byte_end":239395,"line_start":103,"line_end":103,"column_start":35,"column_end":39},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":2026},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":240613,"byte_end":240617,"line_start":145,"line_end":145,"column_start":40,"column_end":44},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":2026},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":128530,"byte_end":128531,"line_start":161,"line_end":161,"column_start":31,"column_end":32},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":2081},"to":{"krate":0,"index":2082}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":128674,"byte_end":128680,"line_start":165,"line_end":165,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":4,"index":68},"to":{"krate":0,"index":2082}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":271183,"byte_end":271190,"line_start":18,"line_end":18,"column_start":42,"column_end":49},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":2188},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":271239,"byte_end":271246,"line_start":20,"line_end":20,"column_start":33,"column_end":40},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":2188},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":271539,"byte_end":271546,"line_start":33,"line_end":33,"column_start":18,"column_end":25},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":271682,"byte_end":271689,"line_start":39,"line_end":39,"column_start":18,"column_end":25},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":273073,"byte_end":273080,"line_start":81,"line_end":81,"column_start":29,"column_end":36},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2188},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":274260,"byte_end":274267,"line_start":118,"line_end":118,"column_start":34,"column_end":41},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2188},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":275210,"byte_end":275217,"line_start":17,"line_end":17,"column_start":30,"column_end":37},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":4229},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":275241,"byte_end":275248,"line_start":19,"line_end":19,"column_start":13,"column_end":20},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":4229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":276557,"byte_end":276564,"line_start":59,"line_end":59,"column_start":29,"column_end":36},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":4229},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":276743,"byte_end":276750,"line_start":69,"line_end":69,"column_start":24,"column_end":31},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":4229},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":277864,"byte_end":277873,"line_start":17,"line_end":17,"column_start":30,"column_end":39},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2279},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":277912,"byte_end":277921,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":2279},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":278142,"byte_end":278151,"line_start":30,"line_end":30,"column_start":13,"column_end":22},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":2279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":278236,"byte_end":278245,"line_start":35,"line_end":35,"column_start":13,"column_end":22},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":2279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":279553,"byte_end":279562,"line_start":77,"line_end":77,"column_start":29,"column_end":38},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":2279},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":279740,"byte_end":279749,"line_start":87,"line_end":87,"column_start":24,"column_end":33},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":2279},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":280931,"byte_end":280941,"line_start":17,"line_end":17,"column_start":30,"column_end":40},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":2330},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":280980,"byte_end":280990,"line_start":19,"line_end":19,"column_start":28,"column_end":38},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":2330},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":281212,"byte_end":281222,"line_start":30,"line_end":30,"column_start":13,"column_end":23},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":2330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":281307,"byte_end":281317,"line_start":35,"line_end":35,"column_start":13,"column_end":23},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":2330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":282628,"byte_end":282638,"line_start":77,"line_end":77,"column_start":29,"column_end":39},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":2330},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":282819,"byte_end":282829,"line_start":87,"line_end":87,"column_start":24,"column_end":34},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":2330},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":283933,"byte_end":283943,"line_start":15,"line_end":15,"column_start":10,"column_end":20},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":4251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":285266,"byte_end":285276,"line_start":56,"line_end":56,"column_start":51,"column_end":61},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":4251},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":285397,"byte_end":285407,"line_start":62,"line_end":62,"column_start":32,"column_end":42},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":4251},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":286362,"byte_end":286367,"line_start":16,"line_end":16,"column_start":30,"column_end":35},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":2406},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":286406,"byte_end":286411,"line_start":18,"line_end":18,"column_start":28,"column_end":33},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":2406},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":286628,"byte_end":286633,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":2406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":287987,"byte_end":287992,"line_start":71,"line_end":71,"column_start":32,"column_end":37},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":2406},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":288177,"byte_end":288182,"line_start":81,"line_end":81,"column_start":27,"column_end":32},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":2406},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":289302,"byte_end":289308,"line_start":16,"line_end":16,"column_start":30,"column_end":36},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":2455},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":289347,"byte_end":289353,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":2455},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":289571,"byte_end":289577,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":2455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":290933,"byte_end":290939,"line_start":71,"line_end":71,"column_start":32,"column_end":38},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":2455},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":291127,"byte_end":291133,"line_start":81,"line_end":81,"column_start":27,"column_end":33},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":2455},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":292337,"byte_end":292343,"line_start":18,"line_end":18,"column_start":42,"column_end":48},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":2505},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":292392,"byte_end":292398,"line_start":20,"line_end":20,"column_start":33,"column_end":39},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":2505},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":292690,"byte_end":292696,"line_start":33,"line_end":33,"column_start":18,"column_end":24},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":2505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":292832,"byte_end":292838,"line_start":39,"line_end":39,"column_start":18,"column_end":24},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":2505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":294219,"byte_end":294225,"line_start":81,"line_end":81,"column_start":29,"column_end":35},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":2505},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":295470,"byte_end":295476,"line_start":119,"line_end":119,"column_start":34,"column_end":40},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":2505},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":296392,"byte_end":296399,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":4278},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":296453,"byte_end":296460,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":4278},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":296626,"byte_end":296633,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":4278},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":296775,"byte_end":296782,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":4278},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":297504,"byte_end":297514,"line_start":16,"line_end":16,"column_start":42,"column_end":52},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":2586},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":297563,"byte_end":297573,"line_start":18,"line_end":18,"column_start":33,"column_end":43},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":2586},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":297869,"byte_end":297879,"line_start":31,"line_end":31,"column_start":18,"column_end":28},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":2586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":298295,"byte_end":298305,"line_start":49,"line_end":49,"column_start":29,"column_end":39},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":2586},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":299651,"byte_end":299660,"line_start":22,"line_end":22,"column_start":28,"column_end":37},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":2628},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":299754,"byte_end":299763,"line_start":26,"line_end":26,"column_start":33,"column_end":42},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":2628},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":300159,"byte_end":300168,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":2628},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":301722,"byte_end":301731,"line_start":91,"line_end":91,"column_start":34,"column_end":43},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":2628},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":302000,"byte_end":302009,"line_start":101,"line_end":101,"column_start":29,"column_end":38},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":2628},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":304223,"byte_end":304235,"line_start":19,"line_end":19,"column_start":28,"column_end":40},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":2682},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":304317,"byte_end":304329,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":2682},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":304629,"byte_end":304641,"line_start":36,"line_end":36,"column_start":18,"column_end":30},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":2682},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":306040,"byte_end":306052,"line_start":78,"line_end":78,"column_start":37,"column_end":49},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":2682},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":306342,"byte_end":306354,"line_start":88,"line_end":88,"column_start":32,"column_end":44},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":2682},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":308352,"byte_end":308362,"line_start":19,"line_end":19,"column_start":20,"column_end":30},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":4312},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":308433,"byte_end":308443,"line_start":26,"line_end":26,"column_start":10,"column_end":20},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":4312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":308561,"byte_end":308571,"line_start":34,"line_end":34,"column_start":10,"column_end":20},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":4312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":309927,"byte_end":309937,"line_start":77,"line_end":77,"column_start":26,"column_end":36},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":4312},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":310183,"byte_end":310193,"line_start":88,"line_end":88,"column_start":21,"column_end":31},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":4312},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":311837,"byte_end":311847,"line_start":16,"line_end":16,"column_start":33,"column_end":43},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":4325},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":312222,"byte_end":312232,"line_start":32,"line_end":32,"column_start":42,"column_end":52},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4325},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":312272,"byte_end":312282,"line_start":34,"line_end":34,"column_start":29,"column_end":39},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":4325},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":312470,"byte_end":312480,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4325},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_concat.rs","byte_start":313416,"byte_end":313425,"line_start":15,"line_end":15,"column_start":39,"column_end":48},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":4339},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_concat.rs","byte_start":313443,"byte_end":313452,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_concat.rs","byte_start":313796,"byte_end":313805,"line_start":33,"line_end":33,"column_start":21,"column_end":30},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":4339},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":315093,"byte_end":315100,"line_start":17,"line_end":17,"column_start":45,"column_end":52},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":2818},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":315155,"byte_end":315162,"line_start":19,"line_end":19,"column_start":36,"column_end":43},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":2818},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":315521,"byte_end":315528,"line_start":34,"line_end":34,"column_start":21,"column_end":28},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":2818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":316028,"byte_end":316035,"line_start":54,"line_end":54,"column_start":37,"column_end":44},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":2818},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":316301,"byte_end":316308,"line_start":64,"line_end":64,"column_start":32,"column_end":39},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":2818},"to":{"krate":1,"index":7931}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":320549,"byte_end":320558,"line_start":77,"line_end":77,"column_start":34,"column_end":43},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":2874},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":320605,"byte_end":320614,"line_start":79,"line_end":79,"column_start":32,"column_end":41},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":2874},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":320898,"byte_end":320907,"line_start":92,"line_end":92,"column_start":17,"column_end":26},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":2874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":321063,"byte_end":321072,"line_start":98,"line_end":98,"column_start":34,"column_end":43},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":2874},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":322820,"byte_end":322832,"line_start":21,"line_end":21,"column_start":54,"column_end":66},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":2918},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":322881,"byte_end":322893,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":2918},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":323349,"byte_end":323361,"line_start":39,"line_end":39,"column_start":18,"column_end":30},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":2918},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":323453,"byte_end":323465,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":2918},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":325175,"byte_end":325187,"line_start":98,"line_end":98,"column_start":29,"column_end":41},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":2918},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":326819,"byte_end":326831,"line_start":146,"line_end":146,"column_start":34,"column_end":46},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":2918},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":244570,"byte_end":244571,"line_start":109,"line_end":109,"column_start":46,"column_end":47},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":2963},"to":{"krate":0,"index":2964}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":244652,"byte_end":244661,"line_start":112,"line_end":112,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":4,"index":97},"to":{"krate":0,"index":2964}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":327597,"byte_end":327601,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":4380},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":328207,"byte_end":328211,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":4380},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":329345,"byte_end":329351,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":4386},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":329378,"byte_end":329384,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":4386},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":329691,"byte_end":329697,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":4386},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":330309,"byte_end":330314,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":4392},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":330346,"byte_end":330351,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":4392},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":330436,"byte_end":330441,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":4392},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":331492,"byte_end":331496,"line_start":31,"line_end":31,"column_start":28,"column_end":32},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":4398},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":331516,"byte_end":331520,"line_start":33,"line_end":33,"column_start":11,"column_end":15},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":4398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":331601,"byte_end":331605,"line_start":37,"line_end":37,"column_start":30,"column_end":34},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":4398},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":332188,"byte_end":332192,"line_start":59,"line_end":59,"column_start":35,"column_end":39},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":4398},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":332802,"byte_end":332809,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":4407},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":332841,"byte_end":332848,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":4407},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":332933,"byte_end":332940,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":4407},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":333465,"byte_end":333471,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":3151},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":333502,"byte_end":333508,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":3151},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":334250,"byte_end":334256,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":3151},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":334853,"byte_end":334859,"line_start":15,"line_end":15,"column_start":40,"column_end":46},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4413},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":335604,"byte_end":335610,"line_start":38,"line_end":38,"column_start":16,"column_end":22},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":337133,"byte_end":337139,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":4413},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":337357,"byte_end":337363,"line_start":84,"line_end":84,"column_start":27,"column_end":33},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":4413},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":340783,"byte_end":340789,"line_start":66,"line_end":66,"column_start":34,"column_end":40},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":3227},"to":{"krate":1,"index":1572}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":340836,"byte_end":340842,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":3227},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":341123,"byte_end":341129,"line_start":81,"line_end":81,"column_start":17,"column_end":23},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":3227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":341290,"byte_end":341296,"line_start":87,"line_end":87,"column_start":39,"column_end":45},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":3227},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":341522,"byte_end":341528,"line_start":96,"line_end":96,"column_start":34,"column_end":40},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":3227},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":343419,"byte_end":343421,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":3272},"to":{"krate":0,"index":3275}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":343476,"byte_end":343478,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":3274},"to":{"krate":0,"index":3276}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":343557,"byte_end":343562,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":17,"index":10},"to":{"krate":0,"index":3275}},{"span":{"file_name":"/Users/rodrigo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":346217,"byte_end":346227,"line_start":95,"line_end":95,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":17,"index":13},"to":{"krate":0,"index":3276}}]}